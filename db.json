{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"13cfe241577330d2087aa6338388e4f6edbbc2c8","modified":1469071977760},{"_id":"source/favicon.ico","hash":"f5bed2d07ce68a5aecf7eaf8e4e5bbf9dc5fcfc5","modified":1468907579229},{"_id":"themes/next/.bowerrc","hash":"80e096fdc1cf912ee85dd9f7e6e77fd40cf60f10","modified":1470916589244},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1470916589244},{"_id":"themes/next/.gitignore","hash":"c8d6a73b9e17f0f8a3716e4ada6960d3180425a6","modified":1470916589244},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1470916589244},{"_id":"themes/next/.javascript_ignore","hash":"d619ee13031908cd72666e4ff652d2ea3483b1c3","modified":1470916589244},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1470916589244},{"_id":"themes/next/README.en.md","hash":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1470916589244},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1470916589244},{"_id":"themes/next/_config.yml","hash":"0011db1873387f0822746480f97207334232fa1e","modified":1470919245254},{"_id":"themes/next/bower.json","hash":"f89c6700a11d81e067cc97273ca6bf96cb88c8f9","modified":1470916589245},{"_id":"themes/next/gulpfile.coffee","hash":"26e5b1b945704c8bc78b928feede895c4c111c95","modified":1470916589245},{"_id":"themes/next/package.json","hash":"63e9c0f1dd9e5d7f51b4ae383981ef939a2ed45d","modified":1470916589246},{"_id":"source/_posts/20140709-3154ErrorOfSqlServer.md","hash":"0eea4041d6058d03fa2e0bb6bd4bc244c0bb7d93","modified":1468907579229},{"_id":"source/_posts/20140711-RanetoANodejsWiki.md","hash":"c13d34a4828a1d65ac74da460d92349fb983cf5f","modified":1468907579229},{"_id":"source/_posts/Hexo-started.md","hash":"5b19ad619936b0b2f6ddfa34e93012c31c936f11","modified":1468907579229},{"_id":"source/_posts/HexoAutoDeploy.md","hash":"bb60323bb29b887f379c7529015c81685e9e9afb","modified":1468907579229},{"_id":"source/_posts/TravisCIAutoDeployHexo.md","hash":"b12d2dd54c9282de6df008902c53aa795a05c74c","modified":1469080504876},{"_id":"source/about/index.md","hash":"ef97b7acfbf1aaa0fd95c62a3df16d788ba8e62d","modified":1468907579229},{"_id":"source/categories/index.md","hash":"af480930b39cef38d79b2540cec4d1d777dc161b","modified":1470918149878},{"_id":"source/tags/index.md","hash":"77e35959a2f6c492787a6c20ccbcf129913a8360","modified":1470918108596},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1470916589239},{"_id":"themes/next/.git/config","hash":"91b6a53b2a7f929b698734717a38d4ac169f0c1f","modified":1470916589241},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1470916586928},{"_id":"themes/next/.git/index","hash":"f19fb25d51e3b824a319d0b6c5e9ba2f60403362","modified":1470916589259},{"_id":"themes/next/.git/packed-refs","hash":"c260c6d28e96faeec8fe2ead52f6103d079e2f0c","modified":1470916589238},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1470916589244},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1470916589244},{"_id":"themes/next/languages/de.yml","hash":"786afba25cfc98845a20d9901823ebeebcd1cbbf","modified":1470916589245},{"_id":"themes/next/languages/default.yml","hash":"9db835c0543ade5a89bc80ec5a898203227cf3d8","modified":1470916589245},{"_id":"themes/next/languages/en.yml","hash":"f03799cbdb5a33064ead080bcac4baca1f6bc5f9","modified":1470916589245},{"_id":"themes/next/languages/fr-FR.yml","hash":"1a084623c39de74301f3e92f9388a3a815a542ca","modified":1470916589245},{"_id":"themes/next/languages/id.yml","hash":"147c01e41b931085ad14250fa900c2249dcbbdd7","modified":1470916589245},{"_id":"themes/next/languages/ja.yml","hash":"a2c7b6301b5474aab798946fb700289df237c3cf","modified":1470916589245},{"_id":"themes/next/languages/pt-BR.yml","hash":"462aa865ca3d479bcf6b363cba61247b50f230ff","modified":1470916589245},{"_id":"themes/next/languages/pt.yml","hash":"ca239b39bf65c9462e59d51b12f0fe566d453197","modified":1470916589245},{"_id":"themes/next/languages/ru.yml","hash":"cc7b964a46587aea0e57b0a5269d8fd25570858e","modified":1470916589245},{"_id":"themes/next/languages/zh-Hans.yml","hash":"bea452bc49aed171a210d09bd6cddc4e846ea8ab","modified":1470916589245},{"_id":"themes/next/languages/zh-hk.yml","hash":"519ab3d817ec3bc5bfc91159c494b6b3c170bea7","modified":1470916589245},{"_id":"themes/next/languages/zh-tw.yml","hash":"6b1f345aaefc13e6723dc8a6741b59ac05c20dfd","modified":1470916589245},{"_id":"themes/next/layout/_layout.swig","hash":"74157f6cfd679ea11febec632542793f37c5e5d4","modified":1470916589245},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1470916589246},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1470916589246},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1470916589246},{"_id":"themes/next/layout/page.swig","hash":"8019d02232a6dd1a665b6a4d2daef8e5dd2f0049","modified":1470916589246},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1470916589246},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1470916589246},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1470916589246},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1470916589259},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1470916589259},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1470916589259},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1470916589249},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"86b9655a9ebbde13ac8dd5795eb4d5b539edab0f","modified":1470916586929},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1470916586929},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1470916586930},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"42fa41564917b44183a50c4d94bb03e1768ddad8","modified":1470916586929},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1470916586929},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"b4ad74c989616b7395dc6c9fce9871bb1e86dfb5","modified":1470916586930},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1470916586929},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1470916586929},{"_id":"themes/next/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1470916586930},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1470916586928},{"_id":"themes/next/.git/logs/HEAD","hash":"76f7ea7baa7b56d1becb74d274921cd3610bcab1","modified":1470916589240},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"43c3433155ccd9abcbe7dce2e6bfa1f3a66af18b","modified":1470916589245},{"_id":"themes/next/layout/_macro/post.swig","hash":"1ca03011bed92614832b1343b65be92183957dc5","modified":1470916589245},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1470916589245},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"1a77843ce5eac62151dc3d38f0a36c43e19e1a74","modified":1470916589245},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1470916589245},{"_id":"themes/next/layout/_partials/comments.swig","hash":"b73f9443bee2d3ea383aad52e49ffca8aa97dcc2","modified":1470916589245},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1470916589245},{"_id":"themes/next/layout/_partials/footer.swig","hash":"4fe588ff8ba8587885c2936db2df490774f89e10","modified":1470916589245},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b0c495b8154ef8b2d2cb0a554e164ff22cdc962","modified":1470916589245},{"_id":"themes/next/layout/_partials/header.swig","hash":"eb028685cb3c329537bbced06c063d23e6a33817","modified":1470916589245},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1470916589245},{"_id":"themes/next/layout/_partials/search.swig","hash":"011b9d6c9f0a2f4654908ea20b9391f9b7981271","modified":1470916589245},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"82d060fe055d6e423bbc9199f82dfe5c68e74779","modified":1470916589245},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1470916589245},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1470916589246},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"0b91cadecead8e0b5211cc42b085998d94af503a","modified":1470916589246},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1470916589246},{"_id":"themes/next/scripts/tags/full-image.js","hash":"3acce36db0feb11a982c6c799aa6b6b47df2827c","modified":1470916589246},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1470916589246},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1470916589249},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1470916589249},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1470916589249},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1470916589249},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1470916589249},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1470916589249},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1470916589249},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1470916589249},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1470916589249},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1470916589249},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1470916589249},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1470916589249},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1470916589249},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1470916589249},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1470916589246},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1470916589246},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1470916589248},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1470916589248},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1470916589248},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1470916589249},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1470916589249},{"_id":"themes/next/.git/refs/heads/master","hash":"283a77b25951fbb3b2f10b4be4c80b6519ac6011","modified":1470916589240},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1470916589245},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1470916589245},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1470916589245},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1470916589245},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"c07f7b2f264e5215b8ed42d67e8cef2477558364","modified":1470916589245},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"7ca5cb4daa58b3504e17f3e02975e794bc634658","modified":1470916589245},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1470916589245},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1470916589245},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1470916589246},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1470916589246},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"0a89c04055bade7baa5962f1d5aefe438d83a244","modified":1470916589246},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"907b931d775d32405d02a25b3b0a3ac03bf804d0","modified":1470916589246},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1470916589246},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"7f7148c8f52e4d3cfc070d964160362179fa8e91","modified":1470916589246},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"5bafc33f57508d1d04a9930165240f6e9efa8d6d","modified":1470916589246},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1470916589246},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1470916589248},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1470916589248},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1470916589248},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1470916589249},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"3ead77befa064d6327dc7afd0a5af7be59a5f196","modified":1470916589249},{"_id":"themes/next/source/css/_variables/base.styl","hash":"17624186f7a1f28daddea258d044f8e03b2f4bea","modified":1470916589249},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1470916589249},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1470916589250},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1470916589250},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1470916589250},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1470916589250},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1470916589250},{"_id":"themes/next/source/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1470916589250},{"_id":"themes/next/source/vendors/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1470916589250},{"_id":"themes/next/source/vendors/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1470916589250},{"_id":"themes/next/source/vendors/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1470916589251},{"_id":"themes/next/source/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1470916589251},{"_id":"themes/next/source/vendors/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1470916589251},{"_id":"themes/next/source/vendors/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1470916589251},{"_id":"themes/next/source/vendors/font-awesome/.bower.json","hash":"7da985a99674e54f514d4fd9fcd3bcea6e7e41d5","modified":1470916589251},{"_id":"themes/next/source/vendors/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1470916589251},{"_id":"themes/next/source/vendors/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1470916589251},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1470916589251},{"_id":"themes/next/source/vendors/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1470916589251},{"_id":"themes/next/source/vendors/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1470916589256},{"_id":"themes/next/source/vendors/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1470916589256},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1470916589256},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1470916589256},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1470916589257},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1470916589257},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1470916589257},{"_id":"themes/next/source/vendors/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1470916589257},{"_id":"themes/next/source/vendors/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1470916589257},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1470916589258},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1470916589258},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1470916589258},{"_id":"themes/next/source/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1470916589256},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"76f7ea7baa7b56d1becb74d274921cd3610bcab1","modified":1470916589240},{"_id":"themes/next/.git/objects/pack/pack-cac37be495ab9113fb6349c68fcebc6570e46a40.idx","hash":"8adeb1e30572f74956250af17ab3a24629569ea8","modified":1470916589237},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1470916589238},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1470916589246},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1470916589246},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"f9c6ee91c2a615edd8ca26edcc8a66b71883c238","modified":1470916589246},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1470916589246},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1470916589246},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1470916589246},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"bff3b18f56175c53f3bc6d733166c4d998e08732","modified":1470916589246},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"696666141cdd204fd8818ac2ad18f05e320f8587","modified":1470916589246},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1470916589248},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1470916589248},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1470916589248},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1470916589248},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1470916589248},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1470916589248},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1470916589248},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1470916589248},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1470916589248},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1470916589248},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1470916589248},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"4303776991ef28f5742ca51c7dffe6f12f0acf34","modified":1470916589248},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1470916589248},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1470916589248},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"6ed60cc621bac096c0ed7534fa25b1a52dc571d4","modified":1470916589248},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1470916589248},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"c2c6c4f6434b4f94aac2af5861cd769427f0ee10","modified":1470916589248},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1470916589249},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1470916589249},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"be22ad34f546a07f6d56b424338cdd898683eea4","modified":1470916589249},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"938d39eedc6e3d33918c1145a5bf1e79991d3fcf","modified":1470916589249},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"8d7cecde4933900c7df2db9d0a98f5f82f88dc93","modified":1470916589249},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"d09280e5b79f3b573edb30f30c7a5f03ac640986","modified":1470916589249},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1470916589249},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d4b7bd610ca03dbb2f5b66631c0e84a79fb4660b","modified":1470916589249},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"1b10ba2d3ad0c063c418dc94a0b7e0db4b342c53","modified":1470916589249},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1470916589250},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1470916589250},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1470916589250},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1470916589250},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1470916589250},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1470916589250},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1470916589250},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1470916589250},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1470916589250},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1470916589251},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1470916589251},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1470916589251},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1470916589251},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1470916589251},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1470916589251},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1470916589256},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1470916589257},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1470916589257},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1470916589252},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1470916589252},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1470916589255},{"_id":"themes/next/source/vendors/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1470916589258},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"76f7ea7baa7b56d1becb74d274921cd3610bcab1","modified":1470916589239},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4da051c7f3924fa2db1e73c55b2baf1c2c150255","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"90f8f9706cd7fe829cf06e9959a65fd3f8b994fa","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"3c46efd6601e268093ce6d7b1471d18501878f0d","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d543d1377c1f61b70e3adb6da0eb12797552e5f2","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"15063d79b5befc21820baf05d6f20cc1c1787477","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"cbca4842a54950e2934b3b8f3cd940f122111aef","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"4eb18b12fa0ea6c35925d9a64f64e2a7dae8c7fd","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1470916589247},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1470916589248},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1470916589248},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1470916589248},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1470916589248},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"618f73450cf541f88a4fddc3d22898aee49d105d","modified":1470916589248},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1470916589248},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"8e66c2635d48e11de616bb29c4b1323698eebc0a","modified":1470916589248},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1470916589248},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1470916589248},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1470916589248},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1470916589248},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"795d94561888d31cb7a6ff4a125596809ea69b7d","modified":1470916589248},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"3afc459442c132c480d1d832f1a872f1070bb048","modified":1470916589248},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1470916589248},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1470916589248},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1470916589249},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1470916589250},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1470916589250},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1470916589250},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1470916589250},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1470916589250},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1470916589250},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1470916589255},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1470916589254},{"_id":"themes/next/.git/objects/pack/pack-cac37be495ab9113fb6349c68fcebc6570e46a40.pack","hash":"cd51eed195cfe87382bd7d2c6adc4392b4f87641","modified":1470916589235},{"_id":"public/atom.xml","hash":"e2e3be3e852f27582b3fc2869007dcf817f40f59","modified":1470919478107},{"_id":"public/content.json","hash":"3d143c5e036d7ddb42b4e90cb4b972cc6d905c01","modified":1470919478110},{"_id":"public/search.xml","hash":"d6295561291add299eeaf7b0456b42076f8f0b1e","modified":1470919478110},{"_id":"public/about/index.html","hash":"22b75ca7be7d8b39adb0922ad3d66638eff6b778","modified":1470919478308},{"_id":"public/categories/index.html","hash":"56d3122de8a076d785113ca763fc22acbb4b0dca","modified":1470919478309},{"_id":"public/tags/index.html","hash":"cd505e1626d681a5ff19b17b70107eb008d86b7b","modified":1470919478309},{"_id":"public/archives/index.html","hash":"029a4832e5fa72310d2ed917bf168ecfd196ca2c","modified":1470919478309},{"_id":"public/archives/2014/index.html","hash":"604a87252f949004fbc1a0118b17e16f4141cfdf","modified":1470919478309},{"_id":"public/archives/2014/07/index.html","hash":"22c02e6ba3638bce1e775e8e5523e39794983c3e","modified":1470919478309},{"_id":"public/archives/2014/12/index.html","hash":"c00d7e4322a6be460c8350dcf65c82b0334bef21","modified":1470919478309},{"_id":"public/archives/2016/index.html","hash":"d54880bad4fd33c07dffca034bad71ddcfef7553","modified":1470919478309},{"_id":"public/archives/2016/07/index.html","hash":"046b3bb3058ee263787d93b07088d4a32d9cec8a","modified":1470919478309},{"_id":"public/categories/Problems/index.html","hash":"a112a66e40952809608314b54a7bdad56c18e91b","modified":1470919478309},{"_id":"public/categories/OpenProjects/index.html","hash":"5f2c901e543c0db1c0f1c6ad6e1e2e9eca06ba70","modified":1470919478309},{"_id":"public/index.html","hash":"cf677480fb5a1b1ead8ae808e825208ae468028f","modified":1470919478309},{"_id":"public/tags/sql-server-2005/index.html","hash":"c3985d4a00070aa98fff548bc9487950a63028f5","modified":1470919478309},{"_id":"public/tags/备份还原/index.html","hash":"009dda06ea7e541302ab532d93bc2fe41ec23ae1","modified":1470919478309},{"_id":"public/tags/raneto/index.html","hash":"257d5baa4d143cb31e58a9b2d319ee010e714a05","modified":1470919478309},{"_id":"public/tags/wiki/index.html","hash":"b4dc0a7a1177c0715acc0a50967c23d419b5c170","modified":1470919478309},{"_id":"public/tags/markdown/index.html","hash":"4650438b9aeb36bfdb6d2de4085219f8ccd32a4e","modified":1470919478310},{"_id":"public/tags/nodejs/index.html","hash":"0066b9716792ec3d586c290d113df63b4c026760","modified":1470919478310},{"_id":"public/tags/hexo/index.html","hash":"d7b02a3e74941c785c02aec1151c984d00188d25","modified":1470919478310},{"_id":"public/tags/github/index.html","hash":"8ab83a90e773bc70c05ccfb80293ba1b7eda9df4","modified":1470919478310},{"_id":"public/tags/vps/index.html","hash":"e8b25de7894ad25d1f43c27f4652fa991026a36a","modified":1470919478310},{"_id":"public/tags/git/index.html","hash":"aa9a7663e1167495581b55c0e847842eb0658b67","modified":1470919478310},{"_id":"public/tags/Travis-CI/index.html","hash":"55319008713ebd2d3dcfaedad0c39538c5a8e513","modified":1470919478310},{"_id":"public/2016/07/cirqb743r000aadlscllbluby/index.html","hash":"29ed9968aecb2e239c500ef0b26d47a7330ec28f","modified":1470919622169},{"_id":"public/2014/12/cirqb743j0008adlsc47darc7/index.html","hash":"27420ac198a5510d16981333aeef885b5547b37a","modified":1470919622169},{"_id":"public/2014/07/cirqb74340002adlsdzym9893/index.html","hash":"94f1379fd5bd382c3aed147e0fc2b2eac502170e","modified":1470919622170},{"_id":"public/2014/07/cirqb742y0000adlscvn43kxo/index.html","hash":"1b1de5d889003584df950e5e37f73de8ead32acd","modified":1470919622170},{"_id":"public/2014/07/cirqb743g0006adlsq9dm3kyi/index.html","hash":"58d4ab8b7f0cfddfd66f497203af2e68ea4f4c70","modified":1470919622170}],"Category":[{"name":"Problems","_id":"cirqb743g0005adlsyb61nnbu"},{"name":"OpenProjects","_id":"cirqb743s000badlsj639m3cs"}],"Data":[],"Page":[{"title":"About","date":"2014-07-08T12:50:39.000Z","_content":"\n\n##Still Building...","source":"about/index.md","raw":"title: About\ndate: 2014-07-08 20:50:39\n---\n\n\n##Still Building...","updated":"2016-07-19T05:52:59.229Z","path":"about/index.html","comments":1,"layout":"page","_id":"cirqb74320001adlskux2qb6z","content":"<p>##Still Building…</p>\n","excerpt":"","more":"<p>##Still Building…</p>\n"},{"title":"分类","date":"2015-12-31T16:00:01.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"title: 分类\ndate: 2016-01-01 00:00:01\ntype: \"categories\"\ncomments: false\n---","updated":"2016-08-11T12:22:29.878Z","path":"categories/index.html","layout":"page","_id":"cirqb74370003adlsbw4t20po","content":"","excerpt":"","more":""},{"title":"标签","date":"2015-12-31T16:00:01.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"title: 标签\ndate: 2016-01-01 00:00:01\ntype: \"tags\"\ncomments: false\n---","updated":"2016-08-11T12:21:48.596Z","path":"tags/index.html","layout":"page","_id":"cirqb743i0007adls8cjt8mu6","content":"","excerpt":"","more":""}],"Post":[{"title":"SQL SERVER 2005恢复数据错误（3154）","date":"2014-07-09T12:18:31.000Z","_content":"\n###问题\n\n在**SqlServer2005**的**Management studio**里使用`bak`文件还原数据库的时候总是会发生下面的错误。\n\n![SQL Server restore error](http://images.cnblogs.com/cnblogs_com/adandelion/BACKERROR.GIF)\n\n>Restore failed for Server 'ADANDELI'. (Microsoft.SqlServer.Smo)\nAn exception occurred while executing a Transact-SQL statement or batch.  (Microsoft.SqlServer.ConnectionInfo\nThe backup set holds a backup of a database other than the existing 'AAA' database.\nRESTORE DATABASE is terminating abnormally. (Microsoft SQL Server，错误: 3154)\n\n<!--more-->\n\n###解决方法：\n\n####Step 1\n\n查询备份文件中的逻辑文件名称\n\n```sql\nUSE master\nRESTORE FILELISTONLY\n   FROM DISK = 'C:\\back.Bak'\nGo\n```\n\n####Step 2\n\n利用bak恢复数据库，强制还原`(REPLACE)`。\n`STATS = 10`每完成10%显示一条记录。\n`DBTest`和`DBTest_log`是上面`C:\\back.Bak`里的逻辑文件\n\n```sql\nUSE master\nRESTORE DATABASE DB_Test\n   FROM DISK = 'C:\\back.Bak'\n   WITH MOVE 'DBTest' TO 'C:\\Program Files\\Microsoft SQL Server2005\\Data\\DB.mdf',\n   MOVE 'DBTest_log' TO 'C:\\Program Files\\Microsoft SQL Server2005\\Data\\DB_log.ldf',\nSTATS = 10, REPLACE\nGO\n```\n\n到此数据库恢复完毕，在数据库列表中应该会出现名为`DB_Test`的数据库。\n\n>代码中相关参数请参考实际自行修改\n","source":"_posts/20140709-3154ErrorOfSqlServer.md","raw":"title: 'SQL SERVER 2005恢复数据错误（3154）'\ndate: 2014-07-09 20:18:31\ntags:\n  - sql server 2005\n  - 备份还原\ncategories:\n  - Problems\n---\n\n###问题\n\n在**SqlServer2005**的**Management studio**里使用`bak`文件还原数据库的时候总是会发生下面的错误。\n\n![SQL Server restore error](http://images.cnblogs.com/cnblogs_com/adandelion/BACKERROR.GIF)\n\n>Restore failed for Server 'ADANDELI'. (Microsoft.SqlServer.Smo)\nAn exception occurred while executing a Transact-SQL statement or batch.  (Microsoft.SqlServer.ConnectionInfo\nThe backup set holds a backup of a database other than the existing 'AAA' database.\nRESTORE DATABASE is terminating abnormally. (Microsoft SQL Server，错误: 3154)\n\n<!--more-->\n\n###解决方法：\n\n####Step 1\n\n查询备份文件中的逻辑文件名称\n\n```sql\nUSE master\nRESTORE FILELISTONLY\n   FROM DISK = 'C:\\back.Bak'\nGo\n```\n\n####Step 2\n\n利用bak恢复数据库，强制还原`(REPLACE)`。\n`STATS = 10`每完成10%显示一条记录。\n`DBTest`和`DBTest_log`是上面`C:\\back.Bak`里的逻辑文件\n\n```sql\nUSE master\nRESTORE DATABASE DB_Test\n   FROM DISK = 'C:\\back.Bak'\n   WITH MOVE 'DBTest' TO 'C:\\Program Files\\Microsoft SQL Server2005\\Data\\DB.mdf',\n   MOVE 'DBTest_log' TO 'C:\\Program Files\\Microsoft SQL Server2005\\Data\\DB_log.ldf',\nSTATS = 10, REPLACE\nGO\n```\n\n到此数据库恢复完毕，在数据库列表中应该会出现名为`DB_Test`的数据库。\n\n>代码中相关参数请参考实际自行修改\n","slug":"20140709-3154ErrorOfSqlServer","published":1,"updated":"2016-07-19T05:52:59.229Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirqb742y0000adlscvn43kxo","content":"<p>###问题</p>\n<p>在<strong>SqlServer2005</strong>的<strong>Management studio</strong>里使用<code>bak</code>文件还原数据库的时候总是会发生下面的错误。</p>\n<p><img src=\"http://images.cnblogs.com/cnblogs_com/adandelion/BACKERROR.GIF\" alt=\"SQL Server restore error\"></p>\n<blockquote>\n<p>Restore failed for Server ‘ADANDELI’. (Microsoft.SqlServer.Smo)<br>An exception occurred while executing a Transact-SQL statement or batch.  (Microsoft.SqlServer.ConnectionInfo<br>The backup set holds a backup of a database other than the existing ‘AAA’ database.<br>RESTORE DATABASE is terminating abnormally. (Microsoft SQL Server，错误: 3154)</p>\n</blockquote>\n<a id=\"more\"></a>\n<p>###解决方法：</p>\n<p>####Step 1</p>\n<p>查询备份文件中的逻辑文件名称</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">USE</span> <span class=\"keyword\">master</span></div><div class=\"line\"><span class=\"keyword\">RESTORE</span> FILELISTONLY</div><div class=\"line\">   <span class=\"keyword\">FROM</span> DISK = <span class=\"string\">'C:\\back.Bak'</span></div><div class=\"line\"><span class=\"keyword\">Go</span></div></pre></td></tr></table></figure>\n<p>####Step 2</p>\n<p>利用bak恢复数据库，强制还原<code>(REPLACE)</code>。<br><code>STATS = 10</code>每完成10%显示一条记录。<br><code>DBTest</code>和<code>DBTest_log</code>是上面<code>C:\\back.Bak</code>里的逻辑文件</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">USE</span> <span class=\"keyword\">master</span></div><div class=\"line\"><span class=\"keyword\">RESTORE</span> <span class=\"keyword\">DATABASE</span> DB_Test</div><div class=\"line\">   <span class=\"keyword\">FROM</span> DISK = <span class=\"string\">'C:\\back.Bak'</span></div><div class=\"line\">   <span class=\"keyword\">WITH</span> <span class=\"keyword\">MOVE</span> <span class=\"string\">'DBTest'</span> <span class=\"keyword\">TO</span> <span class=\"string\">'C:\\Program Files\\Microsoft SQL Server2005\\Data\\DB.mdf'</span>,</div><div class=\"line\">   <span class=\"keyword\">MOVE</span> <span class=\"string\">'DBTest_log'</span> <span class=\"keyword\">TO</span> <span class=\"string\">'C:\\Program Files\\Microsoft SQL Server2005\\Data\\DB_log.ldf'</span>,</div><div class=\"line\">STATS = <span class=\"number\">10</span>, <span class=\"keyword\">REPLACE</span></div><div class=\"line\"><span class=\"keyword\">GO</span></div></pre></td></tr></table></figure>\n<p>到此数据库恢复完毕，在数据库列表中应该会出现名为<code>DB_Test</code>的数据库。</p>\n<blockquote>\n<p>代码中相关参数请参考实际自行修改</p>\n</blockquote>\n","excerpt":"<p>###问题</p>\n<p>在<strong>SqlServer2005</strong>的<strong>Management studio</strong>里使用<code>bak</code>文件还原数据库的时候总是会发生下面的错误。</p>\n<p><img src=\"http://images.cnblogs.com/cnblogs_com/adandelion/BACKERROR.GIF\" alt=\"SQL Server restore error\"></p>\n<blockquote>\n<p>Restore failed for Server ‘ADANDELI’. (Microsoft.SqlServer.Smo)<br>An exception occurred while executing a Transact-SQL statement or batch.  (Microsoft.SqlServer.ConnectionInfo<br>The backup set holds a backup of a database other than the existing ‘AAA’ database.<br>RESTORE DATABASE is terminating abnormally. (Microsoft SQL Server，错误: 3154)</p>\n</blockquote>","more":"<p>###解决方法：</p>\n<p>####Step 1</p>\n<p>查询备份文件中的逻辑文件名称</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">USE</span> <span class=\"keyword\">master</span></div><div class=\"line\"><span class=\"keyword\">RESTORE</span> FILELISTONLY</div><div class=\"line\">   <span class=\"keyword\">FROM</span> DISK = <span class=\"string\">'C:\\back.Bak'</span></div><div class=\"line\"><span class=\"keyword\">Go</span></div></pre></td></tr></table></figure>\n<p>####Step 2</p>\n<p>利用bak恢复数据库，强制还原<code>(REPLACE)</code>。<br><code>STATS = 10</code>每完成10%显示一条记录。<br><code>DBTest</code>和<code>DBTest_log</code>是上面<code>C:\\back.Bak</code>里的逻辑文件</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">USE</span> <span class=\"keyword\">master</span></div><div class=\"line\"><span class=\"keyword\">RESTORE</span> <span class=\"keyword\">DATABASE</span> DB_Test</div><div class=\"line\">   <span class=\"keyword\">FROM</span> DISK = <span class=\"string\">'C:\\back.Bak'</span></div><div class=\"line\">   <span class=\"keyword\">WITH</span> <span class=\"keyword\">MOVE</span> <span class=\"string\">'DBTest'</span> <span class=\"keyword\">TO</span> <span class=\"string\">'C:\\Program Files\\Microsoft SQL Server2005\\Data\\DB.mdf'</span>,</div><div class=\"line\">   <span class=\"keyword\">MOVE</span> <span class=\"string\">'DBTest_log'</span> <span class=\"keyword\">TO</span> <span class=\"string\">'C:\\Program Files\\Microsoft SQL Server2005\\Data\\DB_log.ldf'</span>,</div><div class=\"line\">STATS = <span class=\"number\">10</span>, <span class=\"keyword\">REPLACE</span></div><div class=\"line\"><span class=\"keyword\">GO</span></div></pre></td></tr></table></figure>\n<p>到此数据库恢复完毕，在数据库列表中应该会出现名为<code>DB_Test</code>的数据库。</p>\n<blockquote>\n<p>代码中相关参数请参考实际自行修改</p>\n</blockquote>"},{"title":"Raneto：用Markdown写作、Nodejs搭建的Wiki","date":"2014-07-11T06:30:02.000Z","_content":"\n>最近对**Markdown**很感兴趣，刚在Github上搭建了这个站点，用来记录平时的一些技巧心得。但是还有一些属于经常用到的，可以不断套用的东西，用现在这个站来记录的话，查找起来比较麻烦。因此，想找一款能直接**Markdown**记录，用树形结构组织，支持全文检索的Wiki软件。Github上搜了一圈，对比了几个Repo，最终选择[**Raneto**](1)。\n\n## Raneto\n\n### 简单介绍\n\n#### Markdown powered Knowledgebase for Nodejs\n>Raneto is an open source Knowledgebase platform that uses static Markdown files to power your Knowledgebase.\n\n- 基于**Nodejs**以及**Express**构建，支持**GFM**的**Markdown**文件，利用**Lunr**进行全文检索。\n- 基于文件目录的URL结构，无需数据库\n- 基于**Bootstrap**的响应式模板，方便多终端访问\n\n### 安装\n\n由于是**Nodejs**应用，安装非常方便。*当然，前提是机器上已有__Nodejs__*\n\n1. 下载托管在**Github**上的**Raneto**代码，这里提供最新的[*Release*版本下载](3)。\n2. 解压，在文件夹内用命令行执行`npm install`安装依赖包。\n3. 命令行执行`npm start`启动应用。\n4. 访问`http://localhost:3000`即可。\n<!--more-->\n\n### 内容管理\n\n默认的内容文件夹为`content`，里面默认已经有了**Raneto**的说明手册，很好的例子。  \n修改文件名或者文件夹名称可以改变对应的URL，只要浏览器刷新整个结构貌似就会重建，这点非常强大，修改文件内容也是一样，刷新就显示。  \n当然，通过修改`config.js`可以自定义`content`文件夹位置和静态图片位置。\n```json\n\t// The base URL of your images folder (can use %image_url% in Markdown files)\n\timage_url: '/images',\n\n\t// Specify the path of your content folder where all your '.md' files are located\n\tcontent_dir: './content/',\n```\n### 其他扩展及问题\n\n目前最理想的使用方法是在**VPS**上结合**Dropbox**来同步`content`和`image`文件夹，这样的话就可以从任意终端来更新访问了，感觉会非常方便。\n\n当然，目前**Raneto**最大的问题是中文支持，其实不应该算**Raneto**的问题，而应该是[**lunrjs**](4)的问题。目前没有中文、日文检索的支持。\n\n查看了**lunrjs**的[*Issues*](https://github.com/olivernn/lunr.js/issues)，发现[*ming300*](https://github.com/ming300)同学针对这个问题已经提过[*Pull Request*](https://github.com/olivernn/lunr.js/pull/96)，有需要可以参考一下。\n> **lunrjs**也有语言支持的插件[**lunr-languages**](https://github.com/MihaiValentin/lunr-languages)，但是也很遗憾，还没有中文的支持，下次研究一下，看看能不能搞一个提交上去。\n\n既然检索不了中文，那我就用定义一些`Keyword`来方便检索吧。\n\n\n\n[1]: http://raneto.com/\n[2]: https://github.com/gilbitron/Raneto\n[3]: https://github.com/gilbitron/Raneto/releases\n[4]: http://lunrjs.com/","source":"_posts/20140711-RanetoANodejsWiki.md","raw":"title: Raneto：用Markdown写作、Nodejs搭建的Wiki\ndate: 2014-07-11 14:30:02\ntags:\n  - raneto\n  - wiki\n  - markdown\n  - nodejs\ncategories:\n  - OpenProjects\n---\n\n>最近对**Markdown**很感兴趣，刚在Github上搭建了这个站点，用来记录平时的一些技巧心得。但是还有一些属于经常用到的，可以不断套用的东西，用现在这个站来记录的话，查找起来比较麻烦。因此，想找一款能直接**Markdown**记录，用树形结构组织，支持全文检索的Wiki软件。Github上搜了一圈，对比了几个Repo，最终选择[**Raneto**](1)。\n\n## Raneto\n\n### 简单介绍\n\n#### Markdown powered Knowledgebase for Nodejs\n>Raneto is an open source Knowledgebase platform that uses static Markdown files to power your Knowledgebase.\n\n- 基于**Nodejs**以及**Express**构建，支持**GFM**的**Markdown**文件，利用**Lunr**进行全文检索。\n- 基于文件目录的URL结构，无需数据库\n- 基于**Bootstrap**的响应式模板，方便多终端访问\n\n### 安装\n\n由于是**Nodejs**应用，安装非常方便。*当然，前提是机器上已有__Nodejs__*\n\n1. 下载托管在**Github**上的**Raneto**代码，这里提供最新的[*Release*版本下载](3)。\n2. 解压，在文件夹内用命令行执行`npm install`安装依赖包。\n3. 命令行执行`npm start`启动应用。\n4. 访问`http://localhost:3000`即可。\n<!--more-->\n\n### 内容管理\n\n默认的内容文件夹为`content`，里面默认已经有了**Raneto**的说明手册，很好的例子。  \n修改文件名或者文件夹名称可以改变对应的URL，只要浏览器刷新整个结构貌似就会重建，这点非常强大，修改文件内容也是一样，刷新就显示。  \n当然，通过修改`config.js`可以自定义`content`文件夹位置和静态图片位置。\n```json\n\t// The base URL of your images folder (can use %image_url% in Markdown files)\n\timage_url: '/images',\n\n\t// Specify the path of your content folder where all your '.md' files are located\n\tcontent_dir: './content/',\n```\n### 其他扩展及问题\n\n目前最理想的使用方法是在**VPS**上结合**Dropbox**来同步`content`和`image`文件夹，这样的话就可以从任意终端来更新访问了，感觉会非常方便。\n\n当然，目前**Raneto**最大的问题是中文支持，其实不应该算**Raneto**的问题，而应该是[**lunrjs**](4)的问题。目前没有中文、日文检索的支持。\n\n查看了**lunrjs**的[*Issues*](https://github.com/olivernn/lunr.js/issues)，发现[*ming300*](https://github.com/ming300)同学针对这个问题已经提过[*Pull Request*](https://github.com/olivernn/lunr.js/pull/96)，有需要可以参考一下。\n> **lunrjs**也有语言支持的插件[**lunr-languages**](https://github.com/MihaiValentin/lunr-languages)，但是也很遗憾，还没有中文的支持，下次研究一下，看看能不能搞一个提交上去。\n\n既然检索不了中文，那我就用定义一些`Keyword`来方便检索吧。\n\n\n\n[1]: http://raneto.com/\n[2]: https://github.com/gilbitron/Raneto\n[3]: https://github.com/gilbitron/Raneto/releases\n[4]: http://lunrjs.com/","slug":"20140711-RanetoANodejsWiki","published":1,"updated":"2016-07-19T05:52:59.229Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirqb74340002adlsdzym9893","content":"<blockquote>\n<p>最近对<strong>Markdown</strong>很感兴趣，刚在Github上搭建了这个站点，用来记录平时的一些技巧心得。但是还有一些属于经常用到的，可以不断套用的东西，用现在这个站来记录的话，查找起来比较麻烦。因此，想找一款能直接<strong>Markdown</strong>记录，用树形结构组织，支持全文检索的Wiki软件。Github上搜了一圈，对比了几个Repo，最终选择<a href=\"1\"><strong>Raneto</strong></a>。</p>\n</blockquote>\n<h2 id=\"Raneto\"><a href=\"#Raneto\" class=\"headerlink\" title=\"Raneto\"></a>Raneto</h2><h3 id=\"简单介绍\"><a href=\"#简单介绍\" class=\"headerlink\" title=\"简单介绍\"></a>简单介绍</h3><h4 id=\"Markdown-powered-Knowledgebase-for-Nodejs\"><a href=\"#Markdown-powered-Knowledgebase-for-Nodejs\" class=\"headerlink\" title=\"Markdown powered Knowledgebase for Nodejs\"></a>Markdown powered Knowledgebase for Nodejs</h4><blockquote>\n<p>Raneto is an open source Knowledgebase platform that uses static Markdown files to power your Knowledgebase.</p>\n</blockquote>\n<ul>\n<li>基于<strong>Nodejs</strong>以及<strong>Express</strong>构建，支持<strong>GFM</strong>的<strong>Markdown</strong>文件，利用<strong>Lunr</strong>进行全文检索。</li>\n<li>基于文件目录的URL结构，无需数据库</li>\n<li>基于<strong>Bootstrap</strong>的响应式模板，方便多终端访问</li>\n</ul>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>由于是<strong>Nodejs</strong>应用，安装非常方便。<em>当然，前提是机器上已有<strong>Nodejs</strong></em></p>\n<ol>\n<li>下载托管在<strong>Github</strong>上的<strong>Raneto</strong>代码，这里提供最新的<a href=\"3\"><em>Release</em>版本下载</a>。</li>\n<li>解压，在文件夹内用命令行执行<code>npm install</code>安装依赖包。</li>\n<li>命令行执行<code>npm start</code>启动应用。</li>\n<li>访问<code>http://localhost:3000</code>即可。<a id=\"more\"></a>\n</li>\n</ol>\n<h3 id=\"内容管理\"><a href=\"#内容管理\" class=\"headerlink\" title=\"内容管理\"></a>内容管理</h3><p>默认的内容文件夹为<code>content</code>，里面默认已经有了<strong>Raneto</strong>的说明手册，很好的例子。<br>修改文件名或者文件夹名称可以改变对应的URL，只要浏览器刷新整个结构貌似就会重建，这点非常强大，修改文件内容也是一样，刷新就显示。<br>当然，通过修改<code>config.js</code>可以自定义<code>content</code>文件夹位置和静态图片位置。<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">// The base URL of your images folder (can use %image_url% in Markdown files)</div><div class=\"line\">image_url: '/images',</div><div class=\"line\"></div><div class=\"line\">// Specify the path of your content folder where all your '.md' files are located</div><div class=\"line\">content_dir: './content/',</div></pre></td></tr></table></figure></p>\n<h3 id=\"其他扩展及问题\"><a href=\"#其他扩展及问题\" class=\"headerlink\" title=\"其他扩展及问题\"></a>其他扩展及问题</h3><p>目前最理想的使用方法是在<strong>VPS</strong>上结合<strong>Dropbox</strong>来同步<code>content</code>和<code>image</code>文件夹，这样的话就可以从任意终端来更新访问了，感觉会非常方便。</p>\n<p>当然，目前<strong>Raneto</strong>最大的问题是中文支持，其实不应该算<strong>Raneto</strong>的问题，而应该是<a href=\"4\"><strong>lunrjs</strong></a>的问题。目前没有中文、日文检索的支持。</p>\n<p>查看了<strong>lunrjs</strong>的<a href=\"https://github.com/olivernn/lunr.js/issues\" target=\"_blank\" rel=\"external\"><em>Issues</em></a>，发现<a href=\"https://github.com/ming300\" target=\"_blank\" rel=\"external\"><em>ming300</em></a>同学针对这个问题已经提过<a href=\"https://github.com/olivernn/lunr.js/pull/96\" target=\"_blank\" rel=\"external\"><em>Pull Request</em></a>，有需要可以参考一下。</p>\n<blockquote>\n<p><strong>lunrjs</strong>也有语言支持的插件<a href=\"https://github.com/MihaiValentin/lunr-languages\" target=\"_blank\" rel=\"external\"><strong>lunr-languages</strong></a>，但是也很遗憾，还没有中文的支持，下次研究一下，看看能不能搞一个提交上去。</p>\n</blockquote>\n<p>既然检索不了中文，那我就用定义一些<code>Keyword</code>来方便检索吧。</p>\n","excerpt":"<blockquote>\n<p>最近对<strong>Markdown</strong>很感兴趣，刚在Github上搭建了这个站点，用来记录平时的一些技巧心得。但是还有一些属于经常用到的，可以不断套用的东西，用现在这个站来记录的话，查找起来比较麻烦。因此，想找一款能直接<strong>Markdown</strong>记录，用树形结构组织，支持全文检索的Wiki软件。Github上搜了一圈，对比了几个Repo，最终选择<a href=\"1\"><strong>Raneto</strong></a>。</p>\n</blockquote>\n<h2 id=\"Raneto\"><a href=\"#Raneto\" class=\"headerlink\" title=\"Raneto\"></a>Raneto</h2><h3 id=\"简单介绍\"><a href=\"#简单介绍\" class=\"headerlink\" title=\"简单介绍\"></a>简单介绍</h3><h4 id=\"Markdown-powered-Knowledgebase-for-Nodejs\"><a href=\"#Markdown-powered-Knowledgebase-for-Nodejs\" class=\"headerlink\" title=\"Markdown powered Knowledgebase for Nodejs\"></a>Markdown powered Knowledgebase for Nodejs</h4><blockquote>\n<p>Raneto is an open source Knowledgebase platform that uses static Markdown files to power your Knowledgebase.</p>\n</blockquote>\n<ul>\n<li>基于<strong>Nodejs</strong>以及<strong>Express</strong>构建，支持<strong>GFM</strong>的<strong>Markdown</strong>文件，利用<strong>Lunr</strong>进行全文检索。</li>\n<li>基于文件目录的URL结构，无需数据库</li>\n<li>基于<strong>Bootstrap</strong>的响应式模板，方便多终端访问</li>\n</ul>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>由于是<strong>Nodejs</strong>应用，安装非常方便。<em>当然，前提是机器上已有<strong>Nodejs</strong></em></p>\n<ol>\n<li>下载托管在<strong>Github</strong>上的<strong>Raneto</strong>代码，这里提供最新的<a href=\"3\"><em>Release</em>版本下载</a>。</li>\n<li>解压，在文件夹内用命令行执行<code>npm install</code>安装依赖包。</li>\n<li>命令行执行<code>npm start</code>启动应用。</li>\n<li>访问<code>http://localhost:3000</code>即可。","more":"</li>\n</ol>\n<h3 id=\"内容管理\"><a href=\"#内容管理\" class=\"headerlink\" title=\"内容管理\"></a>内容管理</h3><p>默认的内容文件夹为<code>content</code>，里面默认已经有了<strong>Raneto</strong>的说明手册，很好的例子。<br>修改文件名或者文件夹名称可以改变对应的URL，只要浏览器刷新整个结构貌似就会重建，这点非常强大，修改文件内容也是一样，刷新就显示。<br>当然，通过修改<code>config.js</code>可以自定义<code>content</code>文件夹位置和静态图片位置。<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">// The base URL of your images folder (can use %image_url% in Markdown files)</div><div class=\"line\">image_url: '/images',</div><div class=\"line\"></div><div class=\"line\">// Specify the path of your content folder where all your '.md' files are located</div><div class=\"line\">content_dir: './content/',</div></pre></td></tr></table></figure></p>\n<h3 id=\"其他扩展及问题\"><a href=\"#其他扩展及问题\" class=\"headerlink\" title=\"其他扩展及问题\"></a>其他扩展及问题</h3><p>目前最理想的使用方法是在<strong>VPS</strong>上结合<strong>Dropbox</strong>来同步<code>content</code>和<code>image</code>文件夹，这样的话就可以从任意终端来更新访问了，感觉会非常方便。</p>\n<p>当然，目前<strong>Raneto</strong>最大的问题是中文支持，其实不应该算<strong>Raneto</strong>的问题，而应该是<a href=\"4\"><strong>lunrjs</strong></a>的问题。目前没有中文、日文检索的支持。</p>\n<p>查看了<strong>lunrjs</strong>的<a href=\"https://github.com/olivernn/lunr.js/issues\"><em>Issues</em></a>，发现<a href=\"https://github.com/ming300\"><em>ming300</em></a>同学针对这个问题已经提过<a href=\"https://github.com/olivernn/lunr.js/pull/96\"><em>Pull Request</em></a>，有需要可以参考一下。</p>\n<blockquote>\n<p><strong>lunrjs</strong>也有语言支持的插件<a href=\"https://github.com/MihaiValentin/lunr-languages\"><strong>lunr-languages</strong></a>，但是也很遗憾，还没有中文的支持，下次研究一下，看看能不能搞一个提交上去。</p>\n</blockquote>\n<p>既然检索不了中文，那我就用定义一些<code>Keyword</code>来方便检索吧。</p>"},{"title":"开始使用Hexo","date":"2014-07-08T02:23:38.000Z","_content":"\n原来网站是**wordpress**的，用的也是免费空间[**000webhost**][1]。服务的稳定性还算不错，已经用了几年了，除了偶尔抽风down机之外，作为免费的空间来说还是很不错的。如果有同学要稳定的免费空间，推荐[**000webhost**][1]。\n>关于**000webhost**，注册可能会麻烦一点，需要挂**VPN**或者使用代理，具体方法可自行Google。\n\n###初识Hexo\n\n一开始只是想用**Markdown**来写博客，但是**wordpress**本身对**Markdown**还不能支持，试了几个插件，效果都不是那么理想，在线编辑也都不支持预览，这对于一个**Markdown**新手来说，很不放心。\n\n最近逛**v2ex**的时候也经常看到**Github**上搭建的静态博客。作为一个业余码农，博客更多的是记录一些平常碰到的技术问题和自己的一些学习心得，所以一个能够专注于文字和代码的**Markdown**加上**Github**这个无限免费的平台，非常有吸引力。\n\n在**Github**上发布博客的工具也不少，目前最流行**jekyll**和**octopress**，但都是基于Ruby的，而**Hexo**是基于**nodejs**，\n且生成速度更快，所以毫不犹豫的选择了**Hexo**。\n<!--more-->\n###在Windows和Mac上安装Hexo\n\n原来机器上就已经有**nodejs**、**git**环境了，所以安装**Hexo**就非常简单，一句代码就搞定了。  \n`npm install hexo -g`\n\n\n然后就按照[**官网设置手册**](http://hexo.io/docs/)一步步设置就行，非常简单，并且网上资料也很多，随便一个问题都能Google到答案。\n\n###配置Hexo\n\n初识情况下**Hexo**就能非常完美的运行了，当然，作为中文用户来说，首先设置一下语言选项：  \n`language: zh-CN`  \n日期格式原来英文的，不太适应，也顺便改了一下：  \n`date_format: YYYY-MM-D`  \n剩下的就默认，最后安装了下面两个插件：  \n```\n\"hexo-generator-feed\": \"^0.1.2\",  \n\"hexo-generator-sitemap\": \"~0.1.4\"\n```\n\n主题的话，官方也提供了很多，<https://github.com/hexojs/hexo/wiki/Themes>，选择一个合适的，然后稍做修改即可。\n\n我把整个文件夹`Github Page`也作为一个`Repo`同步了，这样的话不管是**Windows**上面还是**Mac**上面都可以同步修改了，比较方便。\n>当然利用各种云盘同步也不错，我懒得装客户端了，就直接**Git**了。\n\n###问题点\n\n目前觉得最麻烦的还是每次发布必须在电脑上执行一下`hexo d`，用其他电脑想发布新内容的话会比较麻烦，更不用说移动设备了。\n\n下一步准备弄个**VPS**，把**Hexo**部署在上面，然后用同步盘同步到**VPS**后定时执行`hexo g`、`hexo d`应该就可以了吧。\n\n目前就这么多内容，下次想到什么再补充吧。\n\n[1]: http://www.000webhost.com","source":"_posts/Hexo-started.md","raw":"title: '开始使用Hexo'\ndate: 2014-07-08 10:23:38\ntags: \n  - hexo\n  - github\n  - nodejs\n  - markdown\ncategories:\n  - OpenProjects\n---\n\n原来网站是**wordpress**的，用的也是免费空间[**000webhost**][1]。服务的稳定性还算不错，已经用了几年了，除了偶尔抽风down机之外，作为免费的空间来说还是很不错的。如果有同学要稳定的免费空间，推荐[**000webhost**][1]。\n>关于**000webhost**，注册可能会麻烦一点，需要挂**VPN**或者使用代理，具体方法可自行Google。\n\n###初识Hexo\n\n一开始只是想用**Markdown**来写博客，但是**wordpress**本身对**Markdown**还不能支持，试了几个插件，效果都不是那么理想，在线编辑也都不支持预览，这对于一个**Markdown**新手来说，很不放心。\n\n最近逛**v2ex**的时候也经常看到**Github**上搭建的静态博客。作为一个业余码农，博客更多的是记录一些平常碰到的技术问题和自己的一些学习心得，所以一个能够专注于文字和代码的**Markdown**加上**Github**这个无限免费的平台，非常有吸引力。\n\n在**Github**上发布博客的工具也不少，目前最流行**jekyll**和**octopress**，但都是基于Ruby的，而**Hexo**是基于**nodejs**，\n且生成速度更快，所以毫不犹豫的选择了**Hexo**。\n<!--more-->\n###在Windows和Mac上安装Hexo\n\n原来机器上就已经有**nodejs**、**git**环境了，所以安装**Hexo**就非常简单，一句代码就搞定了。  \n`npm install hexo -g`\n\n\n然后就按照[**官网设置手册**](http://hexo.io/docs/)一步步设置就行，非常简单，并且网上资料也很多，随便一个问题都能Google到答案。\n\n###配置Hexo\n\n初识情况下**Hexo**就能非常完美的运行了，当然，作为中文用户来说，首先设置一下语言选项：  \n`language: zh-CN`  \n日期格式原来英文的，不太适应，也顺便改了一下：  \n`date_format: YYYY-MM-D`  \n剩下的就默认，最后安装了下面两个插件：  \n```\n\"hexo-generator-feed\": \"^0.1.2\",  \n\"hexo-generator-sitemap\": \"~0.1.4\"\n```\n\n主题的话，官方也提供了很多，<https://github.com/hexojs/hexo/wiki/Themes>，选择一个合适的，然后稍做修改即可。\n\n我把整个文件夹`Github Page`也作为一个`Repo`同步了，这样的话不管是**Windows**上面还是**Mac**上面都可以同步修改了，比较方便。\n>当然利用各种云盘同步也不错，我懒得装客户端了，就直接**Git**了。\n\n###问题点\n\n目前觉得最麻烦的还是每次发布必须在电脑上执行一下`hexo d`，用其他电脑想发布新内容的话会比较麻烦，更不用说移动设备了。\n\n下一步准备弄个**VPS**，把**Hexo**部署在上面，然后用同步盘同步到**VPS**后定时执行`hexo g`、`hexo d`应该就可以了吧。\n\n目前就这么多内容，下次想到什么再补充吧。\n\n[1]: http://www.000webhost.com","slug":"Hexo-started","published":1,"updated":"2016-07-19T05:52:59.229Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirqb743g0006adlsq9dm3kyi","content":"<p>原来网站是<strong>wordpress</strong>的，用的也是免费空间<a href=\"http://www.000webhost.com\" target=\"_blank\" rel=\"external\"><strong>000webhost</strong></a>。服务的稳定性还算不错，已经用了几年了，除了偶尔抽风down机之外，作为免费的空间来说还是很不错的。如果有同学要稳定的免费空间，推荐<a href=\"http://www.000webhost.com\" target=\"_blank\" rel=\"external\"><strong>000webhost</strong></a>。</p>\n<blockquote>\n<p>关于<strong>000webhost</strong>，注册可能会麻烦一点，需要挂<strong>VPN</strong>或者使用代理，具体方法可自行Google。</p>\n</blockquote>\n<p>###初识Hexo</p>\n<p>一开始只是想用<strong>Markdown</strong>来写博客，但是<strong>wordpress</strong>本身对<strong>Markdown</strong>还不能支持，试了几个插件，效果都不是那么理想，在线编辑也都不支持预览，这对于一个<strong>Markdown</strong>新手来说，很不放心。</p>\n<p>最近逛<strong>v2ex</strong>的时候也经常看到<strong>Github</strong>上搭建的静态博客。作为一个业余码农，博客更多的是记录一些平常碰到的技术问题和自己的一些学习心得，所以一个能够专注于文字和代码的<strong>Markdown</strong>加上<strong>Github</strong>这个无限免费的平台，非常有吸引力。</p>\n<p>在<strong>Github</strong>上发布博客的工具也不少，目前最流行<strong>jekyll</strong>和<strong>octopress</strong>，但都是基于Ruby的，而<strong>Hexo</strong>是基于<strong>nodejs</strong>，<br>且生成速度更快，所以毫不犹豫的选择了<strong>Hexo</strong>。<br><a id=\"more\"></a></p>\n<p>###在Windows和Mac上安装Hexo</p>\n<p>原来机器上就已经有<strong>nodejs</strong>、<strong>git</strong>环境了，所以安装<strong>Hexo</strong>就非常简单，一句代码就搞定了。<br><code>npm install hexo -g</code></p>\n<p>然后就按照<a href=\"http://hexo.io/docs/\" target=\"_blank\" rel=\"external\"><strong>官网设置手册</strong></a>一步步设置就行，非常简单，并且网上资料也很多，随便一个问题都能Google到答案。</p>\n<p>###配置Hexo</p>\n<p>初识情况下<strong>Hexo</strong>就能非常完美的运行了，当然，作为中文用户来说，首先设置一下语言选项：<br><code>language: zh-CN</code><br>日期格式原来英文的，不太适应，也顺便改了一下：<br><code>date_format: YYYY-MM-D</code><br>剩下的就默认，最后安装了下面两个插件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;hexo-generator-feed&quot;: &quot;^0.1.2&quot;,  </div><div class=\"line\">&quot;hexo-generator-sitemap&quot;: &quot;~0.1.4&quot;</div></pre></td></tr></table></figure></p>\n<p>主题的话，官方也提供了很多，<a href=\"https://github.com/hexojs/hexo/wiki/Themes\" target=\"_blank\" rel=\"external\">https://github.com/hexojs/hexo/wiki/Themes</a>，选择一个合适的，然后稍做修改即可。</p>\n<p>我把整个文件夹<code>Github Page</code>也作为一个<code>Repo</code>同步了，这样的话不管是<strong>Windows</strong>上面还是<strong>Mac</strong>上面都可以同步修改了，比较方便。</p>\n<blockquote>\n<p>当然利用各种云盘同步也不错，我懒得装客户端了，就直接<strong>Git</strong>了。</p>\n</blockquote>\n<p>###问题点</p>\n<p>目前觉得最麻烦的还是每次发布必须在电脑上执行一下<code>hexo d</code>，用其他电脑想发布新内容的话会比较麻烦，更不用说移动设备了。</p>\n<p>下一步准备弄个<strong>VPS</strong>，把<strong>Hexo</strong>部署在上面，然后用同步盘同步到<strong>VPS</strong>后定时执行<code>hexo g</code>、<code>hexo d</code>应该就可以了吧。</p>\n<p>目前就这么多内容，下次想到什么再补充吧。</p>\n","excerpt":"<p>原来网站是<strong>wordpress</strong>的，用的也是免费空间<a href=\"http://www.000webhost.com\"><strong>000webhost</strong></a>。服务的稳定性还算不错，已经用了几年了，除了偶尔抽风down机之外，作为免费的空间来说还是很不错的。如果有同学要稳定的免费空间，推荐<a href=\"http://www.000webhost.com\"><strong>000webhost</strong></a>。</p>\n<blockquote>\n<p>关于<strong>000webhost</strong>，注册可能会麻烦一点，需要挂<strong>VPN</strong>或者使用代理，具体方法可自行Google。</p>\n</blockquote>\n<p>###初识Hexo</p>\n<p>一开始只是想用<strong>Markdown</strong>来写博客，但是<strong>wordpress</strong>本身对<strong>Markdown</strong>还不能支持，试了几个插件，效果都不是那么理想，在线编辑也都不支持预览，这对于一个<strong>Markdown</strong>新手来说，很不放心。</p>\n<p>最近逛<strong>v2ex</strong>的时候也经常看到<strong>Github</strong>上搭建的静态博客。作为一个业余码农，博客更多的是记录一些平常碰到的技术问题和自己的一些学习心得，所以一个能够专注于文字和代码的<strong>Markdown</strong>加上<strong>Github</strong>这个无限免费的平台，非常有吸引力。</p>\n<p>在<strong>Github</strong>上发布博客的工具也不少，目前最流行<strong>jekyll</strong>和<strong>octopress</strong>，但都是基于Ruby的，而<strong>Hexo</strong>是基于<strong>nodejs</strong>，<br>且生成速度更快，所以毫不犹豫的选择了<strong>Hexo</strong>。<br>","more":"</p>\n<p>###在Windows和Mac上安装Hexo</p>\n<p>原来机器上就已经有<strong>nodejs</strong>、<strong>git</strong>环境了，所以安装<strong>Hexo</strong>就非常简单，一句代码就搞定了。<br><code>npm install hexo -g</code></p>\n<p>然后就按照<a href=\"http://hexo.io/docs/\"><strong>官网设置手册</strong></a>一步步设置就行，非常简单，并且网上资料也很多，随便一个问题都能Google到答案。</p>\n<p>###配置Hexo</p>\n<p>初识情况下<strong>Hexo</strong>就能非常完美的运行了，当然，作为中文用户来说，首先设置一下语言选项：<br><code>language: zh-CN</code><br>日期格式原来英文的，不太适应，也顺便改了一下：<br><code>date_format: YYYY-MM-D</code><br>剩下的就默认，最后安装了下面两个插件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;hexo-generator-feed&quot;: &quot;^0.1.2&quot;,  </div><div class=\"line\">&quot;hexo-generator-sitemap&quot;: &quot;~0.1.4&quot;</div></pre></td></tr></table></figure></p>\n<p>主题的话，官方也提供了很多，<a href=\"https://github.com/hexojs/hexo/wiki/Themes\">https://github.com/hexojs/hexo/wiki/Themes</a>，选择一个合适的，然后稍做修改即可。</p>\n<p>我把整个文件夹<code>Github Page</code>也作为一个<code>Repo</code>同步了，这样的话不管是<strong>Windows</strong>上面还是<strong>Mac</strong>上面都可以同步修改了，比较方便。</p>\n<blockquote>\n<p>当然利用各种云盘同步也不错，我懒得装客户端了，就直接<strong>Git</strong>了。</p>\n</blockquote>\n<p>###问题点</p>\n<p>目前觉得最麻烦的还是每次发布必须在电脑上执行一下<code>hexo d</code>，用其他电脑想发布新内容的话会比较麻烦，更不用说移动设备了。</p>\n<p>下一步准备弄个<strong>VPS</strong>，把<strong>Hexo</strong>部署在上面，然后用同步盘同步到<strong>VPS</strong>后定时执行<code>hexo g</code>、<code>hexo d</code>应该就可以了吧。</p>\n<p>目前就这么多内容，下次想到什么再补充吧。</p>"},{"title":"通过VPS自动发布HEXO","date":"2014-12-31T05:00:00.000Z","_content":"\n之前已经在本地搭建了hexo的环境，但是还是需要每次都要在本地生成一下然后再提交到**github**或者**gitcafe**上。固定在一台电脑上写作的问题还不是太大，如果需要在不同电脑甚至不同设备上写的话就没有办法了。\n\n之前刚好看到**Bandwagon Host**的特价VPS，原来都是用着别人分享的shadowsocks，以防万一，还是自己搞一个比较安全靠谱，顺便也一起搭了一个VPN，方便移动设备使用。\n\n下面该VPS的详细配置，年付`$9.99`，相当便宜了。\n[直达链接（我的小尾巴~）](https://bandwagonhost.com/aff.php?aff=1604&pid=22)\n>**Basic VPS - Unmanaged - 5G PROMO V2**\n>Unmanaged service HDD: 5 GB SSD RAM: 512 MB CPU: 1x Intel Xeon BW: 500 GB/mo Link speed: 1 Gigabit VPS technology: OpenVZ/KiwiVM Linux OS: 32-bit and 64-bit Centos, Debian, Ubuntu, Fedora Instant OS reload 1 Dedicated IPv4 address Full root access PPP and VPN support (tun/tap) Instant RDNS update from control panel No contract, anytime cancellation Strictly unmanaged, no support 99% uptime guarantee 30-day money back guarantee\n\n既然有了VPS，那我就可以把hexo的生成和发布都扔到上面去，只要我有新的markdown文件，自动通知VPS让其执行对应的同步、生成和发布即可。\n![脑图](http://pubshare.qiniudn.com/sumw3hexo%E8%87%AA%E5%8A%A8%E5%8F%91%E5%B8%83.png)\n\n<!--more-->\n\n###GIT@OSC通知VPS更新\n前面两步都没什么问题，主要是第三步，怎么让VPS知道我们已经更新的markdown文件并执行后续操作。\n\n对比几个国内的代码托管网站，最终我选择了*开源中国*的GIT（**GIT@OSC**），这也是我平常用得最多的代码托管网站。**GIT@OSC**提供了了一个非常好用的功能：*PUSH钩子*。\n![PUSH钩子](http://pubshare.qiniudn.com/sumw3%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202014-12-31%20%E4%B8%8B%E5%8D%882.04.21.png)\n只要在钩子地址中填入对应的服务器地址，每次**GIT@OSC**收到新的**PUSH**的时候都会自动发一个**POST**请求至该地址，内容为该次**PUSH**的具体信息及**PUSH钩子**中设置的密码。\n\n因此，我们只需要在VPS上搭建一个简答的web服务器用来响应对应的请求获取通知即可。\n\n###VPS获取通知执行批处理\n\n####获取通知\n\n##### 1. nginx配置\n\n获取通知主要通过nginx搭建反向代理服务器，把请求转发给Python后，通过Python执行请求的响应和后续的批处理。\n\n由于我VPS选用的是`Ubuntu`，所以安装nginx也非常简单，直接执行一下命令。\n```bash\n$ sudo apt-get install nginx \n```\n修改`/etc/nginx/sites-available/default`文件，增加路由让其转发对应地址的请求至Python程序。\n```xml\nlocation /update {\n        proxy_pass http://127.0.0.1:1111;\n    }\n```\n重启nginx：\n```bash\n$ sudo /etc/init.d/nginx restart\n```\n\n##### 2. Python配置\n\n代码如下：\n```python\n#!/usr/bin/env python3\n#-*- coding:utf-8 -*-\n# start a python service and watch the nginx request dog\n\nfrom http.server import HTTPServer,CGIHTTPRequestHandler\nfrom threading import Thread,RLock\nimport subprocess\nimport logging\nimport sys\nimport os.path\n\n\n_PWD=os.path.abspath(os.path.dirname(__file__))\ndef execute_cmd(args,cwd=None,timeout=30):\n    if isinstance(args,str): args = [args]\n    try:\n        with subprocess.Popen(args,stdout=subprocess.PIPE,cwd=cwd) as proc:\n            try:\n                output,unused_err = proc.communicate(timeout=timeout)\n            except:\n                proc.kill()\n                raise\n            retcode = proc.poll()\n            if retcode:\n                raise subprocess.CalledProcessError(retcode, proc.args, output=output)\n            return output.decode('utf-8','ignore') if output else ''\n    except Exception as ex:\n        logging.error('EXECUTE_CMD_ERROR: %s',' '.join(str(x) for x in args))\n        raise ex\n\nclass HttpHandler(CGIHTTPRequestHandler):\n    _lock = RLock()\n    _counter = 0\n    _building = False\n\n    def build(self):\n        with HttpHandler._lock:\n            if HttpHandler._counter == 0 or HttpHandler._building:\n                return\n        HttpHandler._counter = 0\n        HttpHandler._building = True\n        logging.info(\"BUILDING NOW...\")\n        try:\n            resp = execute_cmd(os.path.join(_PWD,'build.sh'),cwd=_PWD,timeout=600)\n            logging.info(resp)\n        finally:\n            HttpHandler._building = False\n            self.build()\n\n    def do_GET(self):\n        self.do_POST()\n    def do_POST(self):\n        self.send_response(200,'OK')\n        self.end_headers()\n        self.wfile.write(b'OK')\n        self.wfile.flush()\n        with HttpHandler._lock:\n            HttpHandler._counter += 1\n        Thread(target=self.build).start()\n\nif __name__ == '__main__':\n    logging.basicConfig(format='%(asctime)s %(levelname)s: %(message)s',level=logging.INFO)\n\n    port = int(sys.argv[1]) if len(sys.argv) > 1 else 1111\n    logging.info('starting the server at 127.0.0.1:%s',port)\n    httpd = HTTPServer(('127.0.0.1',port),HttpHandler)\n    httpd.serve_forever()\n```\n\n将Python文件`hook.py`和对应的批处理文件`build.sh`都放置在hexo的目录下，启动Python监听：\n```bash\n$ nohup python3 hook.py >> /tmp/hook.log 2>&1 &\n```\n\n####批处理Shell\n```bash\n#!/bin/bash\n\necho \"build at `date`\"\n. ~/.nvm/nvm.sh\nnvm use 0.10.35\ngit pull\nhexo g --d\necho \"built successfully\"\n```\n\n当然，为了让Python能够正确执行脚本，还需要执行一下命令：\n```bash\n$ sudo chmod +x build.sh\n```\n\n----------\n\n到此为止基本上都已经配置完毕，提交一个测试文件试一下，查看一下各自日志以及**github**的日志，没有问题，都成功了。\n\n以后终于可以直接提交markdown，而不用再去生成发布，哪怕是新电脑，没有环境问题，只要有浏览器有网络，一切都那么地简单。","source":"_posts/HexoAutoDeploy.md","raw":"title: '通过VPS自动发布HEXO'\ndate: 2014-12-31 13:00:00\ntags:\n  - vps\n  - hexo\n  - git\ncategories:\n - OpenProjects\n---\n\n之前已经在本地搭建了hexo的环境，但是还是需要每次都要在本地生成一下然后再提交到**github**或者**gitcafe**上。固定在一台电脑上写作的问题还不是太大，如果需要在不同电脑甚至不同设备上写的话就没有办法了。\n\n之前刚好看到**Bandwagon Host**的特价VPS，原来都是用着别人分享的shadowsocks，以防万一，还是自己搞一个比较安全靠谱，顺便也一起搭了一个VPN，方便移动设备使用。\n\n下面该VPS的详细配置，年付`$9.99`，相当便宜了。\n[直达链接（我的小尾巴~）](https://bandwagonhost.com/aff.php?aff=1604&pid=22)\n>**Basic VPS - Unmanaged - 5G PROMO V2**\n>Unmanaged service HDD: 5 GB SSD RAM: 512 MB CPU: 1x Intel Xeon BW: 500 GB/mo Link speed: 1 Gigabit VPS technology: OpenVZ/KiwiVM Linux OS: 32-bit and 64-bit Centos, Debian, Ubuntu, Fedora Instant OS reload 1 Dedicated IPv4 address Full root access PPP and VPN support (tun/tap) Instant RDNS update from control panel No contract, anytime cancellation Strictly unmanaged, no support 99% uptime guarantee 30-day money back guarantee\n\n既然有了VPS，那我就可以把hexo的生成和发布都扔到上面去，只要我有新的markdown文件，自动通知VPS让其执行对应的同步、生成和发布即可。\n![脑图](http://pubshare.qiniudn.com/sumw3hexo%E8%87%AA%E5%8A%A8%E5%8F%91%E5%B8%83.png)\n\n<!--more-->\n\n###GIT@OSC通知VPS更新\n前面两步都没什么问题，主要是第三步，怎么让VPS知道我们已经更新的markdown文件并执行后续操作。\n\n对比几个国内的代码托管网站，最终我选择了*开源中国*的GIT（**GIT@OSC**），这也是我平常用得最多的代码托管网站。**GIT@OSC**提供了了一个非常好用的功能：*PUSH钩子*。\n![PUSH钩子](http://pubshare.qiniudn.com/sumw3%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202014-12-31%20%E4%B8%8B%E5%8D%882.04.21.png)\n只要在钩子地址中填入对应的服务器地址，每次**GIT@OSC**收到新的**PUSH**的时候都会自动发一个**POST**请求至该地址，内容为该次**PUSH**的具体信息及**PUSH钩子**中设置的密码。\n\n因此，我们只需要在VPS上搭建一个简答的web服务器用来响应对应的请求获取通知即可。\n\n###VPS获取通知执行批处理\n\n####获取通知\n\n##### 1. nginx配置\n\n获取通知主要通过nginx搭建反向代理服务器，把请求转发给Python后，通过Python执行请求的响应和后续的批处理。\n\n由于我VPS选用的是`Ubuntu`，所以安装nginx也非常简单，直接执行一下命令。\n```bash\n$ sudo apt-get install nginx \n```\n修改`/etc/nginx/sites-available/default`文件，增加路由让其转发对应地址的请求至Python程序。\n```xml\nlocation /update {\n        proxy_pass http://127.0.0.1:1111;\n    }\n```\n重启nginx：\n```bash\n$ sudo /etc/init.d/nginx restart\n```\n\n##### 2. Python配置\n\n代码如下：\n```python\n#!/usr/bin/env python3\n#-*- coding:utf-8 -*-\n# start a python service and watch the nginx request dog\n\nfrom http.server import HTTPServer,CGIHTTPRequestHandler\nfrom threading import Thread,RLock\nimport subprocess\nimport logging\nimport sys\nimport os.path\n\n\n_PWD=os.path.abspath(os.path.dirname(__file__))\ndef execute_cmd(args,cwd=None,timeout=30):\n    if isinstance(args,str): args = [args]\n    try:\n        with subprocess.Popen(args,stdout=subprocess.PIPE,cwd=cwd) as proc:\n            try:\n                output,unused_err = proc.communicate(timeout=timeout)\n            except:\n                proc.kill()\n                raise\n            retcode = proc.poll()\n            if retcode:\n                raise subprocess.CalledProcessError(retcode, proc.args, output=output)\n            return output.decode('utf-8','ignore') if output else ''\n    except Exception as ex:\n        logging.error('EXECUTE_CMD_ERROR: %s',' '.join(str(x) for x in args))\n        raise ex\n\nclass HttpHandler(CGIHTTPRequestHandler):\n    _lock = RLock()\n    _counter = 0\n    _building = False\n\n    def build(self):\n        with HttpHandler._lock:\n            if HttpHandler._counter == 0 or HttpHandler._building:\n                return\n        HttpHandler._counter = 0\n        HttpHandler._building = True\n        logging.info(\"BUILDING NOW...\")\n        try:\n            resp = execute_cmd(os.path.join(_PWD,'build.sh'),cwd=_PWD,timeout=600)\n            logging.info(resp)\n        finally:\n            HttpHandler._building = False\n            self.build()\n\n    def do_GET(self):\n        self.do_POST()\n    def do_POST(self):\n        self.send_response(200,'OK')\n        self.end_headers()\n        self.wfile.write(b'OK')\n        self.wfile.flush()\n        with HttpHandler._lock:\n            HttpHandler._counter += 1\n        Thread(target=self.build).start()\n\nif __name__ == '__main__':\n    logging.basicConfig(format='%(asctime)s %(levelname)s: %(message)s',level=logging.INFO)\n\n    port = int(sys.argv[1]) if len(sys.argv) > 1 else 1111\n    logging.info('starting the server at 127.0.0.1:%s',port)\n    httpd = HTTPServer(('127.0.0.1',port),HttpHandler)\n    httpd.serve_forever()\n```\n\n将Python文件`hook.py`和对应的批处理文件`build.sh`都放置在hexo的目录下，启动Python监听：\n```bash\n$ nohup python3 hook.py >> /tmp/hook.log 2>&1 &\n```\n\n####批处理Shell\n```bash\n#!/bin/bash\n\necho \"build at `date`\"\n. ~/.nvm/nvm.sh\nnvm use 0.10.35\ngit pull\nhexo g --d\necho \"built successfully\"\n```\n\n当然，为了让Python能够正确执行脚本，还需要执行一下命令：\n```bash\n$ sudo chmod +x build.sh\n```\n\n----------\n\n到此为止基本上都已经配置完毕，提交一个测试文件试一下，查看一下各自日志以及**github**的日志，没有问题，都成功了。\n\n以后终于可以直接提交markdown，而不用再去生成发布，哪怕是新电脑，没有环境问题，只要有浏览器有网络，一切都那么地简单。","slug":"HexoAutoDeploy","published":1,"updated":"2016-07-19T05:52:59.229Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirqb743j0008adlsc47darc7","content":"<p>之前已经在本地搭建了hexo的环境，但是还是需要每次都要在本地生成一下然后再提交到<strong>github</strong>或者<strong>gitcafe</strong>上。固定在一台电脑上写作的问题还不是太大，如果需要在不同电脑甚至不同设备上写的话就没有办法了。</p>\n<p>之前刚好看到<strong>Bandwagon Host</strong>的特价VPS，原来都是用着别人分享的shadowsocks，以防万一，还是自己搞一个比较安全靠谱，顺便也一起搭了一个VPN，方便移动设备使用。</p>\n<p>下面该VPS的详细配置，年付<code>$9.99</code>，相当便宜了。<br><a href=\"https://bandwagonhost.com/aff.php?aff=1604&amp;pid=22\" target=\"_blank\" rel=\"external\">直达链接（我的小尾巴~）</a></p>\n<blockquote>\n<p><strong>Basic VPS - Unmanaged - 5G PROMO V2</strong><br>Unmanaged service HDD: 5 GB SSD RAM: 512 MB CPU: 1x Intel Xeon BW: 500 GB/mo Link speed: 1 Gigabit VPS technology: OpenVZ/KiwiVM Linux OS: 32-bit and 64-bit Centos, Debian, Ubuntu, Fedora Instant OS reload 1 Dedicated IPv4 address Full root access PPP and VPN support (tun/tap) Instant RDNS update from control panel No contract, anytime cancellation Strictly unmanaged, no support 99% uptime guarantee 30-day money back guarantee</p>\n</blockquote>\n<p>既然有了VPS，那我就可以把hexo的生成和发布都扔到上面去，只要我有新的markdown文件，自动通知VPS让其执行对应的同步、生成和发布即可。<br><img src=\"http://pubshare.qiniudn.com/sumw3hexo%E8%87%AA%E5%8A%A8%E5%8F%91%E5%B8%83.png\" alt=\"脑图\"></p>\n<a id=\"more\"></a>\n<p>###GIT@OSC通知VPS更新<br>前面两步都没什么问题，主要是第三步，怎么让VPS知道我们已经更新的markdown文件并执行后续操作。</p>\n<p>对比几个国内的代码托管网站，最终我选择了<em>开源中国</em>的GIT（<strong>GIT@OSC</strong>），这也是我平常用得最多的代码托管网站。<strong>GIT@OSC</strong>提供了了一个非常好用的功能：<em>PUSH钩子</em>。<br><img src=\"http://pubshare.qiniudn.com/sumw3%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202014-12-31%20%E4%B8%8B%E5%8D%882.04.21.png\" alt=\"PUSH钩子\"><br>只要在钩子地址中填入对应的服务器地址，每次<strong>GIT@OSC</strong>收到新的<strong>PUSH</strong>的时候都会自动发一个<strong>POST</strong>请求至该地址，内容为该次<strong>PUSH</strong>的具体信息及<strong>PUSH钩子</strong>中设置的密码。</p>\n<p>因此，我们只需要在VPS上搭建一个简答的web服务器用来响应对应的请求获取通知即可。</p>\n<p>###VPS获取通知执行批处理</p>\n<p>####获取通知</p>\n<h5 id=\"1-nginx配置\"><a href=\"#1-nginx配置\" class=\"headerlink\" title=\"1. nginx配置\"></a>1. nginx配置</h5><p>获取通知主要通过nginx搭建反向代理服务器，把请求转发给Python后，通过Python执行请求的响应和后续的批处理。</p>\n<p>由于我VPS选用的是<code>Ubuntu</code>，所以安装nginx也非常简单，直接执行一下命令。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo apt-get install nginx</div></pre></td></tr></table></figure></p>\n<p>修改<code>/etc/nginx/sites-available/default</code>文件，增加路由让其转发对应地址的请求至Python程序。<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">location /update &#123;</div><div class=\"line\">        proxy_pass http://127.0.0.1:1111;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>重启nginx：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo /etc/init.d/nginx restart</div></pre></td></tr></table></figure></p>\n<h5 id=\"2-Python配置\"><a href=\"#2-Python配置\" class=\"headerlink\" title=\"2. Python配置\"></a>2. Python配置</h5><p>代码如下：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/bin/env python3</span></div><div class=\"line\"><span class=\"comment\">#-*- coding:utf-8 -*-</span></div><div class=\"line\"><span class=\"comment\"># start a python service and watch the nginx request dog</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">from</span> http.server <span class=\"keyword\">import</span> HTTPServer,CGIHTTPRequestHandler</div><div class=\"line\"><span class=\"keyword\">from</span> threading <span class=\"keyword\">import</span> Thread,RLock</div><div class=\"line\"><span class=\"keyword\">import</span> subprocess</div><div class=\"line\"><span class=\"keyword\">import</span> logging</div><div class=\"line\"><span class=\"keyword\">import</span> sys</div><div class=\"line\"><span class=\"keyword\">import</span> os.path</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">_PWD=os.path.abspath(os.path.dirname(__file__))</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">execute_cmd</span><span class=\"params\">(args,cwd=None,timeout=<span class=\"number\">30</span>)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">if</span> isinstance(args,str): args = [args]</div><div class=\"line\">    <span class=\"keyword\">try</span>:</div><div class=\"line\">        <span class=\"keyword\">with</span> subprocess.Popen(args,stdout=subprocess.PIPE,cwd=cwd) <span class=\"keyword\">as</span> proc:</div><div class=\"line\">            <span class=\"keyword\">try</span>:</div><div class=\"line\">                output,unused_err = proc.communicate(timeout=timeout)</div><div class=\"line\">            <span class=\"keyword\">except</span>:</div><div class=\"line\">                proc.kill()</div><div class=\"line\">                <span class=\"keyword\">raise</span></div><div class=\"line\">            retcode = proc.poll()</div><div class=\"line\">            <span class=\"keyword\">if</span> retcode:</div><div class=\"line\">                <span class=\"keyword\">raise</span> subprocess.CalledProcessError(retcode, proc.args, output=output)</div><div class=\"line\">            <span class=\"keyword\">return</span> output.decode(<span class=\"string\">'utf-8'</span>,<span class=\"string\">'ignore'</span>) <span class=\"keyword\">if</span> output <span class=\"keyword\">else</span> <span class=\"string\">''</span></div><div class=\"line\">    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> ex:</div><div class=\"line\">        logging.error(<span class=\"string\">'EXECUTE_CMD_ERROR: %s'</span>,<span class=\"string\">' '</span>.join(str(x) <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> args))</div><div class=\"line\">        <span class=\"keyword\">raise</span> ex</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HttpHandler</span><span class=\"params\">(CGIHTTPRequestHandler)</span>:</span></div><div class=\"line\">    _lock = RLock()</div><div class=\"line\">    _counter = <span class=\"number\">0</span></div><div class=\"line\">    _building = <span class=\"keyword\">False</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">build</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"keyword\">with</span> HttpHandler._lock:</div><div class=\"line\">            <span class=\"keyword\">if</span> HttpHandler._counter == <span class=\"number\">0</span> <span class=\"keyword\">or</span> HttpHandler._building:</div><div class=\"line\">                <span class=\"keyword\">return</span></div><div class=\"line\">        HttpHandler._counter = <span class=\"number\">0</span></div><div class=\"line\">        HttpHandler._building = <span class=\"keyword\">True</span></div><div class=\"line\">        logging.info(<span class=\"string\">\"BUILDING NOW...\"</span>)</div><div class=\"line\">        <span class=\"keyword\">try</span>:</div><div class=\"line\">            resp = execute_cmd(os.path.join(_PWD,<span class=\"string\">'build.sh'</span>),cwd=_PWD,timeout=<span class=\"number\">600</span>)</div><div class=\"line\">            logging.info(resp)</div><div class=\"line\">        <span class=\"keyword\">finally</span>:</div><div class=\"line\">            HttpHandler._building = <span class=\"keyword\">False</span></div><div class=\"line\">            self.build()</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">do_GET</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        self.do_POST()</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">do_POST</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        self.send_response(<span class=\"number\">200</span>,<span class=\"string\">'OK'</span>)</div><div class=\"line\">        self.end_headers()</div><div class=\"line\">        self.wfile.write(<span class=\"string\">b'OK'</span>)</div><div class=\"line\">        self.wfile.flush()</div><div class=\"line\">        <span class=\"keyword\">with</span> HttpHandler._lock:</div><div class=\"line\">            HttpHandler._counter += <span class=\"number\">1</span></div><div class=\"line\">        Thread(target=self.build).start()</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</div><div class=\"line\">    logging.basicConfig(format=<span class=\"string\">'%(asctime)s %(levelname)s: %(message)s'</span>,level=logging.INFO)</div><div class=\"line\"></div><div class=\"line\">    port = int(sys.argv[<span class=\"number\">1</span>]) <span class=\"keyword\">if</span> len(sys.argv) &gt; <span class=\"number\">1</span> <span class=\"keyword\">else</span> <span class=\"number\">1111</span></div><div class=\"line\">    logging.info(<span class=\"string\">'starting the server at 127.0.0.1:%s'</span>,port)</div><div class=\"line\">    httpd = HTTPServer((<span class=\"string\">'127.0.0.1'</span>,port),HttpHandler)</div><div class=\"line\">    httpd.serve_forever()</div></pre></td></tr></table></figure></p>\n<p>将Python文件<code>hook.py</code>和对应的批处理文件<code>build.sh</code>都放置在hexo的目录下，启动Python监听：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ nohup python3 hook.py &gt;&gt; /tmp/hook.log 2&gt;&amp;1 &amp;</div></pre></td></tr></table></figure></p>\n<p>####批处理Shell<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/bash</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"build at `date`\"</span></div><div class=\"line\">. ~/.nvm/nvm.sh</div><div class=\"line\">nvm use 0.10.35</div><div class=\"line\">git pull</div><div class=\"line\">hexo g -<span class=\"_\">-d</span></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"built successfully\"</span></div></pre></td></tr></table></figure></p>\n<p>当然，为了让Python能够正确执行脚本，还需要执行一下命令：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo chmod +x build.sh</div></pre></td></tr></table></figure></p>\n<hr>\n<p>到此为止基本上都已经配置完毕，提交一个测试文件试一下，查看一下各自日志以及<strong>github</strong>的日志，没有问题，都成功了。</p>\n<p>以后终于可以直接提交markdown，而不用再去生成发布，哪怕是新电脑，没有环境问题，只要有浏览器有网络，一切都那么地简单。</p>\n","excerpt":"<p>之前已经在本地搭建了hexo的环境，但是还是需要每次都要在本地生成一下然后再提交到<strong>github</strong>或者<strong>gitcafe</strong>上。固定在一台电脑上写作的问题还不是太大，如果需要在不同电脑甚至不同设备上写的话就没有办法了。</p>\n<p>之前刚好看到<strong>Bandwagon Host</strong>的特价VPS，原来都是用着别人分享的shadowsocks，以防万一，还是自己搞一个比较安全靠谱，顺便也一起搭了一个VPN，方便移动设备使用。</p>\n<p>下面该VPS的详细配置，年付<code>$9.99</code>，相当便宜了。<br><a href=\"https://bandwagonhost.com/aff.php?aff=1604&amp;pid=22\">直达链接（我的小尾巴~）</a></p>\n<blockquote>\n<p><strong>Basic VPS - Unmanaged - 5G PROMO V2</strong><br>Unmanaged service HDD: 5 GB SSD RAM: 512 MB CPU: 1x Intel Xeon BW: 500 GB/mo Link speed: 1 Gigabit VPS technology: OpenVZ/KiwiVM Linux OS: 32-bit and 64-bit Centos, Debian, Ubuntu, Fedora Instant OS reload 1 Dedicated IPv4 address Full root access PPP and VPN support (tun/tap) Instant RDNS update from control panel No contract, anytime cancellation Strictly unmanaged, no support 99% uptime guarantee 30-day money back guarantee</p>\n</blockquote>\n<p>既然有了VPS，那我就可以把hexo的生成和发布都扔到上面去，只要我有新的markdown文件，自动通知VPS让其执行对应的同步、生成和发布即可。<br><img src=\"http://pubshare.qiniudn.com/sumw3hexo%E8%87%AA%E5%8A%A8%E5%8F%91%E5%B8%83.png\" alt=\"脑图\"></p>","more":"<p>###GIT@OSC通知VPS更新<br>前面两步都没什么问题，主要是第三步，怎么让VPS知道我们已经更新的markdown文件并执行后续操作。</p>\n<p>对比几个国内的代码托管网站，最终我选择了<em>开源中国</em>的GIT（<strong>GIT@OSC</strong>），这也是我平常用得最多的代码托管网站。<strong>GIT@OSC</strong>提供了了一个非常好用的功能：<em>PUSH钩子</em>。<br><img src=\"http://pubshare.qiniudn.com/sumw3%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202014-12-31%20%E4%B8%8B%E5%8D%882.04.21.png\" alt=\"PUSH钩子\"><br>只要在钩子地址中填入对应的服务器地址，每次<strong>GIT@OSC</strong>收到新的<strong>PUSH</strong>的时候都会自动发一个<strong>POST</strong>请求至该地址，内容为该次<strong>PUSH</strong>的具体信息及<strong>PUSH钩子</strong>中设置的密码。</p>\n<p>因此，我们只需要在VPS上搭建一个简答的web服务器用来响应对应的请求获取通知即可。</p>\n<p>###VPS获取通知执行批处理</p>\n<p>####获取通知</p>\n<h5 id=\"1-nginx配置\"><a href=\"#1-nginx配置\" class=\"headerlink\" title=\"1. nginx配置\"></a>1. nginx配置</h5><p>获取通知主要通过nginx搭建反向代理服务器，把请求转发给Python后，通过Python执行请求的响应和后续的批处理。</p>\n<p>由于我VPS选用的是<code>Ubuntu</code>，所以安装nginx也非常简单，直接执行一下命令。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo apt-get install nginx</div></pre></td></tr></table></figure></p>\n<p>修改<code>/etc/nginx/sites-available/default</code>文件，增加路由让其转发对应地址的请求至Python程序。<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">location /update &#123;</div><div class=\"line\">        proxy_pass http://127.0.0.1:1111;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>重启nginx：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo /etc/init.d/nginx restart</div></pre></td></tr></table></figure></p>\n<h5 id=\"2-Python配置\"><a href=\"#2-Python配置\" class=\"headerlink\" title=\"2. Python配置\"></a>2. Python配置</h5><p>代码如下：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/bin/env python3</span></div><div class=\"line\"><span class=\"comment\">#-*- coding:utf-8 -*-</span></div><div class=\"line\"><span class=\"comment\"># start a python service and watch the nginx request dog</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">from</span> http.server <span class=\"keyword\">import</span> HTTPServer,CGIHTTPRequestHandler</div><div class=\"line\"><span class=\"keyword\">from</span> threading <span class=\"keyword\">import</span> Thread,RLock</div><div class=\"line\"><span class=\"keyword\">import</span> subprocess</div><div class=\"line\"><span class=\"keyword\">import</span> logging</div><div class=\"line\"><span class=\"keyword\">import</span> sys</div><div class=\"line\"><span class=\"keyword\">import</span> os.path</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">_PWD=os.path.abspath(os.path.dirname(__file__))</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">execute_cmd</span><span class=\"params\">(args,cwd=None,timeout=<span class=\"number\">30</span>)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">if</span> isinstance(args,str): args = [args]</div><div class=\"line\">    <span class=\"keyword\">try</span>:</div><div class=\"line\">        <span class=\"keyword\">with</span> subprocess.Popen(args,stdout=subprocess.PIPE,cwd=cwd) <span class=\"keyword\">as</span> proc:</div><div class=\"line\">            <span class=\"keyword\">try</span>:</div><div class=\"line\">                output,unused_err = proc.communicate(timeout=timeout)</div><div class=\"line\">            <span class=\"keyword\">except</span>:</div><div class=\"line\">                proc.kill()</div><div class=\"line\">                <span class=\"keyword\">raise</span></div><div class=\"line\">            retcode = proc.poll()</div><div class=\"line\">            <span class=\"keyword\">if</span> retcode:</div><div class=\"line\">                <span class=\"keyword\">raise</span> subprocess.CalledProcessError(retcode, proc.args, output=output)</div><div class=\"line\">            <span class=\"keyword\">return</span> output.decode(<span class=\"string\">'utf-8'</span>,<span class=\"string\">'ignore'</span>) <span class=\"keyword\">if</span> output <span class=\"keyword\">else</span> <span class=\"string\">''</span></div><div class=\"line\">    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> ex:</div><div class=\"line\">        logging.error(<span class=\"string\">'EXECUTE_CMD_ERROR: %s'</span>,<span class=\"string\">' '</span>.join(str(x) <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> args))</div><div class=\"line\">        <span class=\"keyword\">raise</span> ex</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HttpHandler</span><span class=\"params\">(CGIHTTPRequestHandler)</span>:</span></div><div class=\"line\">    _lock = RLock()</div><div class=\"line\">    _counter = <span class=\"number\">0</span></div><div class=\"line\">    _building = <span class=\"keyword\">False</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">build</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        <span class=\"keyword\">with</span> HttpHandler._lock:</div><div class=\"line\">            <span class=\"keyword\">if</span> HttpHandler._counter == <span class=\"number\">0</span> <span class=\"keyword\">or</span> HttpHandler._building:</div><div class=\"line\">                <span class=\"keyword\">return</span></div><div class=\"line\">        HttpHandler._counter = <span class=\"number\">0</span></div><div class=\"line\">        HttpHandler._building = <span class=\"keyword\">True</span></div><div class=\"line\">        logging.info(<span class=\"string\">\"BUILDING NOW...\"</span>)</div><div class=\"line\">        <span class=\"keyword\">try</span>:</div><div class=\"line\">            resp = execute_cmd(os.path.join(_PWD,<span class=\"string\">'build.sh'</span>),cwd=_PWD,timeout=<span class=\"number\">600</span>)</div><div class=\"line\">            logging.info(resp)</div><div class=\"line\">        <span class=\"keyword\">finally</span>:</div><div class=\"line\">            HttpHandler._building = <span class=\"keyword\">False</span></div><div class=\"line\">            self.build()</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">do_GET</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        self.do_POST()</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">do_POST</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        self.send_response(<span class=\"number\">200</span>,<span class=\"string\">'OK'</span>)</div><div class=\"line\">        self.end_headers()</div><div class=\"line\">        self.wfile.write(<span class=\"string\">b'OK'</span>)</div><div class=\"line\">        self.wfile.flush()</div><div class=\"line\">        <span class=\"keyword\">with</span> HttpHandler._lock:</div><div class=\"line\">            HttpHandler._counter += <span class=\"number\">1</span></div><div class=\"line\">        Thread(target=self.build).start()</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</div><div class=\"line\">    logging.basicConfig(format=<span class=\"string\">'%(asctime)s %(levelname)s: %(message)s'</span>,level=logging.INFO)</div><div class=\"line\"></div><div class=\"line\">    port = int(sys.argv[<span class=\"number\">1</span>]) <span class=\"keyword\">if</span> len(sys.argv) &gt; <span class=\"number\">1</span> <span class=\"keyword\">else</span> <span class=\"number\">1111</span></div><div class=\"line\">    logging.info(<span class=\"string\">'starting the server at 127.0.0.1:%s'</span>,port)</div><div class=\"line\">    httpd = HTTPServer((<span class=\"string\">'127.0.0.1'</span>,port),HttpHandler)</div><div class=\"line\">    httpd.serve_forever()</div></pre></td></tr></table></figure></p>\n<p>将Python文件<code>hook.py</code>和对应的批处理文件<code>build.sh</code>都放置在hexo的目录下，启动Python监听：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ nohup python3 hook.py &gt;&gt; /tmp/hook.log 2&gt;&amp;1 &amp;</div></pre></td></tr></table></figure></p>\n<p>####批处理Shell<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/bash</div><div class=\"line\"></span></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"build at `date`\"</span></div><div class=\"line\">. ~/.nvm/nvm.sh</div><div class=\"line\">nvm use 0.10.35</div><div class=\"line\">git pull</div><div class=\"line\">hexo g -<span class=\"_\">-d</span></div><div class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"built successfully\"</span></div></pre></td></tr></table></figure></p>\n<p>当然，为了让Python能够正确执行脚本，还需要执行一下命令：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo chmod +x build.sh</div></pre></td></tr></table></figure></p>\n<hr>\n<p>到此为止基本上都已经配置完毕，提交一个测试文件试一下，查看一下各自日志以及<strong>github</strong>的日志，没有问题，都成功了。</p>\n<p>以后终于可以直接提交markdown，而不用再去生成发布，哪怕是新电脑，没有环境问题，只要有浏览器有网络，一切都那么地简单。</p>"},{"title":"用 Travis CI 自动部署 Hexo","date":"2016-07-21T05:21:38.000Z","_content":"\n## 开始之前\n\n在开始之前，请先申请 Travis CI 帐号，把你的 GitHub repo 新增到 Travis CI 上，如果还没建立 `.travis.yml` 的话，请先制作一个新的 `.travis.yml` 。\n\n## Deploy Key\n\n首先你必须用 `ssh-keygen` 制作一个 SSH Key ，供 GitHub 当作 Deploy key 使用。\n\n```\n$ ssh-keygen -t rsa -C \"your_email@example.com\"\n```\n\n在制作 SSH key 时，请把 passphrase 留空，因为在 Travis 上输入密码很麻烦，我目前还找不到比较简便的方式，如果各位知道的话欢迎提供给我。\n当 SSH key 制作完成后，复制 Public key 到GitHub上的 Deploy key 字段，如下：\n\n![](https://zespia.tw/blog/2015/01/21/continuous-deployment-to-github-with-travis/deploy_key.png)\n\n<!--more-->\n\n## 加密 Private Key\n\n首先，安装 Travis 的命令列工具：\n\n```\n$ gem install travis\n```\n\n在安装完毕后，透过命令列工具登入到 Travis ：\n\n```\n$ travis login --auto\n```\n\n如此一来，我们就能透过 Travis 提供的命令列工具加密刚刚所制作的 Private key ，并把它上传到 Travis 上供日后使用。\n\n假设 Private key 的档案名称为 `ssh_key`，Travis 会加密并产生 `ssh_key.enc` ，并自动在 `.travis.yml` 的 `before_install` 字段中，自动插入解密指令。\n\n```\n$ travis encrypt-file ssh_key --add\n```\n\n正常来说 Travis 会自动解析目前的 repo 并把 Private key 上传到相对应的 repo ，但有时可能会秀逗，这时你必须在指令后加上 `-r` 选项来指定 repo 名称，例如：\n\n```\n$ travis encrypt-file ssh_key --add -r hexojs/site\n```\n\n## 设定 `.travis.yml`\n\n把刚刚制作的 `ssh_key.enc` 移至 `.travis/ssh_key.enc` ，并在 `.travis ` 文件夹中建立 `ssh_config` 档案，指定 Travis 上的 SSH 设定。\n\n```\nHost github.com\n  User git\n  StrictHostKeyChecking no\n  IdentityFile ~/.ssh/id_rsa\n  IdentitiesOnly yes\n```\n\n因为刚刚修改了 `ssh_key.enc` 的位址，所以我们要顺带修改刚刚 Travis 在 `.travis.yml` 帮我们插入的那条解密指令。请注意，不要照抄这段指令，每个人的环境变数都不一样。\n\n```\n- openssl aes-256-cbc -K $encrypted_06b8e90ac19b_key -iv $encrypted_06b8e90ac19b_iv -in .travis/ssh_key.enc -out ~/.ssh/id_rsa -d\n```\n\n这条指令会利用 openssl 解密 Private key ，并把解密后的档案存放在 `~/.ssh/id_rsa` ，接着指定这个档案的权限：\n\n```\n- chmod 600 ~/.ssh/id_rsa\n```\n\n然后，把 Private key 加入到系统中：\n\n```\n- eval $（ssh-agent）\n- ssh-add ~/.ssh/id_rsa\n```\n\n记得刚刚我们制作的 `ssh_config` 档案吗？别忘了把他复制到 `~/.ssh` 文件夹：\n\n```\n- cp .travis/ssh_config ~/.ssh/config\n```\n\n为了让 git 操作能顺利进行，我们必须先设定 git 的使用者信息：\n\n```\n- git config --global user.name“Tommy Chen”\n- git config --global user.email tommy351@gmail.com\n```\n\n最后的结果可能如下，如果你和我一样使用 Hexo 的话可以参考看看\n\n```\nlanguage: node_js\n\nnode_js:\n  - \"0.10\"\n\nbefore_install:\n  # Decrypt the private key\n  - openssl aes-256-cbc -K $encrypted_06b8e90ac19b_key -iv $encrypted_06b8e90ac19b_iv -in .travis/ssh_key.enc -out ~/.ssh/id_rsa -d\n  # Set the permission of the key\n  - chmod 600 ~/.ssh/id_rsa\n  # Start SSH agent\n  - eval $(ssh-agent)\n  # Add the private key to the system\n  - ssh-add ~/.ssh/id_rsa\n  # Copy SSH config\n  - cp .travis/ssh_config ~/.ssh/config\n  # Set Git config\n  - git config --global user.name \"Tommy Chen\"\n  - git config --global user.email tommy351@gmail.com\n  # Install Hexo\n  - npm install hexo@beta -g\n  # Clone the repository\n  - git clone https://github.com/hexojs/hexojs.github.io .deploy\n\nscript:\n  - hexo generate\n  - hexo deploy\n\nbranches:\n  only:\n    - master\n```\n\n------\n\n> 引用：[用 Travis CI 自動部署網站到 GitHub](https://zespia.tw/blog/2015/01/21/continuous-deployment-to-github-with-travis/)\n\n\n> 其他 [`.travis.yml`](https://github.com/51offer/51offer.github.com/blob/blog/.travis.yml) 参考 ","source":"_posts/TravisCIAutoDeployHexo.md","raw":"title: '用 Travis CI 自动部署 Hexo'\ndate: 2016-07-21 13:21:38\ntags: \n  - hexo\n  - Travis CI\ncategories:\n  - OpenProjects\n---\n\n## 开始之前\n\n在开始之前，请先申请 Travis CI 帐号，把你的 GitHub repo 新增到 Travis CI 上，如果还没建立 `.travis.yml` 的话，请先制作一个新的 `.travis.yml` 。\n\n## Deploy Key\n\n首先你必须用 `ssh-keygen` 制作一个 SSH Key ，供 GitHub 当作 Deploy key 使用。\n\n```\n$ ssh-keygen -t rsa -C \"your_email@example.com\"\n```\n\n在制作 SSH key 时，请把 passphrase 留空，因为在 Travis 上输入密码很麻烦，我目前还找不到比较简便的方式，如果各位知道的话欢迎提供给我。\n当 SSH key 制作完成后，复制 Public key 到GitHub上的 Deploy key 字段，如下：\n\n![](https://zespia.tw/blog/2015/01/21/continuous-deployment-to-github-with-travis/deploy_key.png)\n\n<!--more-->\n\n## 加密 Private Key\n\n首先，安装 Travis 的命令列工具：\n\n```\n$ gem install travis\n```\n\n在安装完毕后，透过命令列工具登入到 Travis ：\n\n```\n$ travis login --auto\n```\n\n如此一来，我们就能透过 Travis 提供的命令列工具加密刚刚所制作的 Private key ，并把它上传到 Travis 上供日后使用。\n\n假设 Private key 的档案名称为 `ssh_key`，Travis 会加密并产生 `ssh_key.enc` ，并自动在 `.travis.yml` 的 `before_install` 字段中，自动插入解密指令。\n\n```\n$ travis encrypt-file ssh_key --add\n```\n\n正常来说 Travis 会自动解析目前的 repo 并把 Private key 上传到相对应的 repo ，但有时可能会秀逗，这时你必须在指令后加上 `-r` 选项来指定 repo 名称，例如：\n\n```\n$ travis encrypt-file ssh_key --add -r hexojs/site\n```\n\n## 设定 `.travis.yml`\n\n把刚刚制作的 `ssh_key.enc` 移至 `.travis/ssh_key.enc` ，并在 `.travis ` 文件夹中建立 `ssh_config` 档案，指定 Travis 上的 SSH 设定。\n\n```\nHost github.com\n  User git\n  StrictHostKeyChecking no\n  IdentityFile ~/.ssh/id_rsa\n  IdentitiesOnly yes\n```\n\n因为刚刚修改了 `ssh_key.enc` 的位址，所以我们要顺带修改刚刚 Travis 在 `.travis.yml` 帮我们插入的那条解密指令。请注意，不要照抄这段指令，每个人的环境变数都不一样。\n\n```\n- openssl aes-256-cbc -K $encrypted_06b8e90ac19b_key -iv $encrypted_06b8e90ac19b_iv -in .travis/ssh_key.enc -out ~/.ssh/id_rsa -d\n```\n\n这条指令会利用 openssl 解密 Private key ，并把解密后的档案存放在 `~/.ssh/id_rsa` ，接着指定这个档案的权限：\n\n```\n- chmod 600 ~/.ssh/id_rsa\n```\n\n然后，把 Private key 加入到系统中：\n\n```\n- eval $（ssh-agent）\n- ssh-add ~/.ssh/id_rsa\n```\n\n记得刚刚我们制作的 `ssh_config` 档案吗？别忘了把他复制到 `~/.ssh` 文件夹：\n\n```\n- cp .travis/ssh_config ~/.ssh/config\n```\n\n为了让 git 操作能顺利进行，我们必须先设定 git 的使用者信息：\n\n```\n- git config --global user.name“Tommy Chen”\n- git config --global user.email tommy351@gmail.com\n```\n\n最后的结果可能如下，如果你和我一样使用 Hexo 的话可以参考看看\n\n```\nlanguage: node_js\n\nnode_js:\n  - \"0.10\"\n\nbefore_install:\n  # Decrypt the private key\n  - openssl aes-256-cbc -K $encrypted_06b8e90ac19b_key -iv $encrypted_06b8e90ac19b_iv -in .travis/ssh_key.enc -out ~/.ssh/id_rsa -d\n  # Set the permission of the key\n  - chmod 600 ~/.ssh/id_rsa\n  # Start SSH agent\n  - eval $(ssh-agent)\n  # Add the private key to the system\n  - ssh-add ~/.ssh/id_rsa\n  # Copy SSH config\n  - cp .travis/ssh_config ~/.ssh/config\n  # Set Git config\n  - git config --global user.name \"Tommy Chen\"\n  - git config --global user.email tommy351@gmail.com\n  # Install Hexo\n  - npm install hexo@beta -g\n  # Clone the repository\n  - git clone https://github.com/hexojs/hexojs.github.io .deploy\n\nscript:\n  - hexo generate\n  - hexo deploy\n\nbranches:\n  only:\n    - master\n```\n\n------\n\n> 引用：[用 Travis CI 自動部署網站到 GitHub](https://zespia.tw/blog/2015/01/21/continuous-deployment-to-github-with-travis/)\n\n\n> 其他 [`.travis.yml`](https://github.com/51offer/51offer.github.com/blob/blog/.travis.yml) 参考 ","slug":"TravisCIAutoDeployHexo","published":1,"updated":"2016-07-21T05:55:04.876Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirqb743r000aadlscllbluby","content":"<h2 id=\"开始之前\"><a href=\"#开始之前\" class=\"headerlink\" title=\"开始之前\"></a>开始之前</h2><p>在开始之前，请先申请 Travis CI 帐号，把你的 GitHub repo 新增到 Travis CI 上，如果还没建立 <code>.travis.yml</code> 的话，请先制作一个新的 <code>.travis.yml</code> 。</p>\n<h2 id=\"Deploy-Key\"><a href=\"#Deploy-Key\" class=\"headerlink\" title=\"Deploy Key\"></a>Deploy Key</h2><p>首先你必须用 <code>ssh-keygen</code> 制作一个 SSH Key ，供 GitHub 当作 Deploy key 使用。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</div></pre></td></tr></table></figure>\n<p>在制作 SSH key 时，请把 passphrase 留空，因为在 Travis 上输入密码很麻烦，我目前还找不到比较简便的方式，如果各位知道的话欢迎提供给我。<br>当 SSH key 制作完成后，复制 Public key 到GitHub上的 Deploy key 字段，如下：</p>\n<p><img src=\"https://zespia.tw/blog/2015/01/21/continuous-deployment-to-github-with-travis/deploy_key.png\" alt=\"\"></p>\n<a id=\"more\"></a>\n<h2 id=\"加密-Private-Key\"><a href=\"#加密-Private-Key\" class=\"headerlink\" title=\"加密 Private Key\"></a>加密 Private Key</h2><p>首先，安装 Travis 的命令列工具：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ gem install travis</div></pre></td></tr></table></figure>\n<p>在安装完毕后，透过命令列工具登入到 Travis ：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ travis login --auto</div></pre></td></tr></table></figure>\n<p>如此一来，我们就能透过 Travis 提供的命令列工具加密刚刚所制作的 Private key ，并把它上传到 Travis 上供日后使用。</p>\n<p>假设 Private key 的档案名称为 <code>ssh_key</code>，Travis 会加密并产生 <code>ssh_key.enc</code> ，并自动在 <code>.travis.yml</code> 的 <code>before_install</code> 字段中，自动插入解密指令。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ travis encrypt-file ssh_key --add</div></pre></td></tr></table></figure>\n<p>正常来说 Travis 会自动解析目前的 repo 并把 Private key 上传到相对应的 repo ，但有时可能会秀逗，这时你必须在指令后加上 <code>-r</code> 选项来指定 repo 名称，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ travis encrypt-file ssh_key --add -r hexojs/site</div></pre></td></tr></table></figure>\n<h2 id=\"设定-travis-yml\"><a href=\"#设定-travis-yml\" class=\"headerlink\" title=\"设定 .travis.yml\"></a>设定 <code>.travis.yml</code></h2><p>把刚刚制作的 <code>ssh_key.enc</code> 移至 <code>.travis/ssh_key.enc</code> ，并在 <code>.travis</code> 文件夹中建立 <code>ssh_config</code> 档案，指定 Travis 上的 SSH 设定。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Host github.com</div><div class=\"line\">  User git</div><div class=\"line\">  StrictHostKeyChecking no</div><div class=\"line\">  IdentityFile ~/.ssh/id_rsa</div><div class=\"line\">  IdentitiesOnly yes</div></pre></td></tr></table></figure>\n<p>因为刚刚修改了 <code>ssh_key.enc</code> 的位址，所以我们要顺带修改刚刚 Travis 在 <code>.travis.yml</code> 帮我们插入的那条解密指令。请注意，不要照抄这段指令，每个人的环境变数都不一样。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">- openssl aes-256-cbc -K $encrypted_06b8e90ac19b_key -iv $encrypted_06b8e90ac19b_iv -in .travis/ssh_key.enc -out ~/.ssh/id_rsa -d</div></pre></td></tr></table></figure>\n<p>这条指令会利用 openssl 解密 Private key ，并把解密后的档案存放在 <code>~/.ssh/id_rsa</code> ，接着指定这个档案的权限：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">- chmod 600 ~/.ssh/id_rsa</div></pre></td></tr></table></figure>\n<p>然后，把 Private key 加入到系统中：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">- eval $（ssh-agent）</div><div class=\"line\">- ssh-add ~/.ssh/id_rsa</div></pre></td></tr></table></figure>\n<p>记得刚刚我们制作的 <code>ssh_config</code> 档案吗？别忘了把他复制到 <code>~/.ssh</code> 文件夹：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">- cp .travis/ssh_config ~/.ssh/config</div></pre></td></tr></table></figure>\n<p>为了让 git 操作能顺利进行，我们必须先设定 git 的使用者信息：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">- git config --global user.name“Tommy Chen”</div><div class=\"line\">- git config --global user.email tommy351@gmail.com</div></pre></td></tr></table></figure>\n<p>最后的结果可能如下，如果你和我一样使用 Hexo 的话可以参考看看</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\">language: node_js</div><div class=\"line\"></div><div class=\"line\">node_js:</div><div class=\"line\">  - &quot;0.10&quot;</div><div class=\"line\"></div><div class=\"line\">before_install:</div><div class=\"line\">  # Decrypt the private key</div><div class=\"line\">  - openssl aes-256-cbc -K $encrypted_06b8e90ac19b_key -iv $encrypted_06b8e90ac19b_iv -in .travis/ssh_key.enc -out ~/.ssh/id_rsa -d</div><div class=\"line\">  # Set the permission of the key</div><div class=\"line\">  - chmod 600 ~/.ssh/id_rsa</div><div class=\"line\">  # Start SSH agent</div><div class=\"line\">  - eval $(ssh-agent)</div><div class=\"line\">  # Add the private key to the system</div><div class=\"line\">  - ssh-add ~/.ssh/id_rsa</div><div class=\"line\">  # Copy SSH config</div><div class=\"line\">  - cp .travis/ssh_config ~/.ssh/config</div><div class=\"line\">  # Set Git config</div><div class=\"line\">  - git config --global user.name &quot;Tommy Chen&quot;</div><div class=\"line\">  - git config --global user.email tommy351@gmail.com</div><div class=\"line\">  # Install Hexo</div><div class=\"line\">  - npm install hexo@beta -g</div><div class=\"line\">  # Clone the repository</div><div class=\"line\">  - git clone https://github.com/hexojs/hexojs.github.io .deploy</div><div class=\"line\"></div><div class=\"line\">script:</div><div class=\"line\">  - hexo generate</div><div class=\"line\">  - hexo deploy</div><div class=\"line\"></div><div class=\"line\">branches:</div><div class=\"line\">  only:</div><div class=\"line\">    - master</div></pre></td></tr></table></figure>\n<hr>\n<blockquote>\n<p>引用：<a href=\"https://zespia.tw/blog/2015/01/21/continuous-deployment-to-github-with-travis/\" target=\"_blank\" rel=\"external\">用 Travis CI 自動部署網站到 GitHub</a></p>\n<p>其他 <a href=\"https://github.com/51offer/51offer.github.com/blob/blog/.travis.yml\" target=\"_blank\" rel=\"external\"><code>.travis.yml</code></a> 参考 </p>\n</blockquote>\n","excerpt":"<h2 id=\"开始之前\"><a href=\"#开始之前\" class=\"headerlink\" title=\"开始之前\"></a>开始之前</h2><p>在开始之前，请先申请 Travis CI 帐号，把你的 GitHub repo 新增到 Travis CI 上，如果还没建立 <code>.travis.yml</code> 的话，请先制作一个新的 <code>.travis.yml</code> 。</p>\n<h2 id=\"Deploy-Key\"><a href=\"#Deploy-Key\" class=\"headerlink\" title=\"Deploy Key\"></a>Deploy Key</h2><p>首先你必须用 <code>ssh-keygen</code> 制作一个 SSH Key ，供 GitHub 当作 Deploy key 使用。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</div></pre></td></tr></table></figure>\n<p>在制作 SSH key 时，请把 passphrase 留空，因为在 Travis 上输入密码很麻烦，我目前还找不到比较简便的方式，如果各位知道的话欢迎提供给我。<br>当 SSH key 制作完成后，复制 Public key 到GitHub上的 Deploy key 字段，如下：</p>\n<p><img src=\"https://zespia.tw/blog/2015/01/21/continuous-deployment-to-github-with-travis/deploy_key.png\" alt=\"\"></p>","more":"<h2 id=\"加密-Private-Key\"><a href=\"#加密-Private-Key\" class=\"headerlink\" title=\"加密 Private Key\"></a>加密 Private Key</h2><p>首先，安装 Travis 的命令列工具：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ gem install travis</div></pre></td></tr></table></figure>\n<p>在安装完毕后，透过命令列工具登入到 Travis ：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ travis login --auto</div></pre></td></tr></table></figure>\n<p>如此一来，我们就能透过 Travis 提供的命令列工具加密刚刚所制作的 Private key ，并把它上传到 Travis 上供日后使用。</p>\n<p>假设 Private key 的档案名称为 <code>ssh_key</code>，Travis 会加密并产生 <code>ssh_key.enc</code> ，并自动在 <code>.travis.yml</code> 的 <code>before_install</code> 字段中，自动插入解密指令。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ travis encrypt-file ssh_key --add</div></pre></td></tr></table></figure>\n<p>正常来说 Travis 会自动解析目前的 repo 并把 Private key 上传到相对应的 repo ，但有时可能会秀逗，这时你必须在指令后加上 <code>-r</code> 选项来指定 repo 名称，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ travis encrypt-file ssh_key --add -r hexojs/site</div></pre></td></tr></table></figure>\n<h2 id=\"设定-travis-yml\"><a href=\"#设定-travis-yml\" class=\"headerlink\" title=\"设定 .travis.yml\"></a>设定 <code>.travis.yml</code></h2><p>把刚刚制作的 <code>ssh_key.enc</code> 移至 <code>.travis/ssh_key.enc</code> ，并在 <code>.travis</code> 文件夹中建立 <code>ssh_config</code> 档案，指定 Travis 上的 SSH 设定。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Host github.com</div><div class=\"line\">  User git</div><div class=\"line\">  StrictHostKeyChecking no</div><div class=\"line\">  IdentityFile ~/.ssh/id_rsa</div><div class=\"line\">  IdentitiesOnly yes</div></pre></td></tr></table></figure>\n<p>因为刚刚修改了 <code>ssh_key.enc</code> 的位址，所以我们要顺带修改刚刚 Travis 在 <code>.travis.yml</code> 帮我们插入的那条解密指令。请注意，不要照抄这段指令，每个人的环境变数都不一样。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">- openssl aes-256-cbc -K $encrypted_06b8e90ac19b_key -iv $encrypted_06b8e90ac19b_iv -in .travis/ssh_key.enc -out ~/.ssh/id_rsa -d</div></pre></td></tr></table></figure>\n<p>这条指令会利用 openssl 解密 Private key ，并把解密后的档案存放在 <code>~/.ssh/id_rsa</code> ，接着指定这个档案的权限：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">- chmod 600 ~/.ssh/id_rsa</div></pre></td></tr></table></figure>\n<p>然后，把 Private key 加入到系统中：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">- eval $（ssh-agent）</div><div class=\"line\">- ssh-add ~/.ssh/id_rsa</div></pre></td></tr></table></figure>\n<p>记得刚刚我们制作的 <code>ssh_config</code> 档案吗？别忘了把他复制到 <code>~/.ssh</code> 文件夹：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">- cp .travis/ssh_config ~/.ssh/config</div></pre></td></tr></table></figure>\n<p>为了让 git 操作能顺利进行，我们必须先设定 git 的使用者信息：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">- git config --global user.name“Tommy Chen”</div><div class=\"line\">- git config --global user.email tommy351@gmail.com</div></pre></td></tr></table></figure>\n<p>最后的结果可能如下，如果你和我一样使用 Hexo 的话可以参考看看</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\">language: node_js</div><div class=\"line\"></div><div class=\"line\">node_js:</div><div class=\"line\">  - &quot;0.10&quot;</div><div class=\"line\"></div><div class=\"line\">before_install:</div><div class=\"line\">  # Decrypt the private key</div><div class=\"line\">  - openssl aes-256-cbc -K $encrypted_06b8e90ac19b_key -iv $encrypted_06b8e90ac19b_iv -in .travis/ssh_key.enc -out ~/.ssh/id_rsa -d</div><div class=\"line\">  # Set the permission of the key</div><div class=\"line\">  - chmod 600 ~/.ssh/id_rsa</div><div class=\"line\">  # Start SSH agent</div><div class=\"line\">  - eval $(ssh-agent)</div><div class=\"line\">  # Add the private key to the system</div><div class=\"line\">  - ssh-add ~/.ssh/id_rsa</div><div class=\"line\">  # Copy SSH config</div><div class=\"line\">  - cp .travis/ssh_config ~/.ssh/config</div><div class=\"line\">  # Set Git config</div><div class=\"line\">  - git config --global user.name &quot;Tommy Chen&quot;</div><div class=\"line\">  - git config --global user.email tommy351@gmail.com</div><div class=\"line\">  # Install Hexo</div><div class=\"line\">  - npm install hexo@beta -g</div><div class=\"line\">  # Clone the repository</div><div class=\"line\">  - git clone https://github.com/hexojs/hexojs.github.io .deploy</div><div class=\"line\"></div><div class=\"line\">script:</div><div class=\"line\">  - hexo generate</div><div class=\"line\">  - hexo deploy</div><div class=\"line\"></div><div class=\"line\">branches:</div><div class=\"line\">  only:</div><div class=\"line\">    - master</div></pre></td></tr></table></figure>\n<hr>\n<blockquote>\n<p>引用：<a href=\"https://zespia.tw/blog/2015/01/21/continuous-deployment-to-github-with-travis/\">用 Travis CI 自動部署網站到 GitHub</a></p>\n<p>其他 <a href=\"https://github.com/51offer/51offer.github.com/blob/blog/.travis.yml\"><code>.travis.yml</code></a> 参考 </p>\n</blockquote>"}],"PostAsset":[],"PostCategory":[{"post_id":"cirqb742y0000adlscvn43kxo","category_id":"cirqb743g0005adlsyb61nnbu","_id":"cirqb743v000cadls1a316t0f"},{"post_id":"cirqb74340002adlsdzym9893","category_id":"cirqb743s000badlsj639m3cs","_id":"cirqb743y000hadls7tg4gfx6"},{"post_id":"cirqb743g0006adlsq9dm3kyi","category_id":"cirqb743s000badlsj639m3cs","_id":"cirqb7440000kadlslvv5u64b"},{"post_id":"cirqb743j0008adlsc47darc7","category_id":"cirqb743s000badlsj639m3cs","_id":"cirqb7441000nadls01o597nf"},{"post_id":"cirqb743r000aadlscllbluby","category_id":"cirqb743s000badlsj639m3cs","_id":"cirqb7441000padls5fnu9led"}],"PostTag":[{"post_id":"cirqb742y0000adlscvn43kxo","tag_id":"cirqb74390004adlsf0oaop0a","_id":"cirqb743y000fadlsr4zdsc55"},{"post_id":"cirqb742y0000adlscvn43kxo","tag_id":"cirqb743r0009adlsii1mzkf1","_id":"cirqb743y000gadlsc86k0tn1"},{"post_id":"cirqb74340002adlsdzym9893","tag_id":"cirqb743v000dadlsf69tkw5d","_id":"cirqb7442000radls08cpb7p1"},{"post_id":"cirqb74340002adlsdzym9893","tag_id":"cirqb743z000jadlsv3d9simf","_id":"cirqb7442000sadls7vzfr19o"},{"post_id":"cirqb74340002adlsdzym9893","tag_id":"cirqb7440000madlsex4ij4gw","_id":"cirqb7442000uadlsehf96m8n"},{"post_id":"cirqb74340002adlsdzym9893","tag_id":"cirqb7441000oadlsp0vpz7tr","_id":"cirqb7442000vadlsfku6c7uq"},{"post_id":"cirqb743g0006adlsq9dm3kyi","tag_id":"cirqb7441000qadls7t9frtah","_id":"cirqb7447000zadlszmuixo71"},{"post_id":"cirqb743g0006adlsq9dm3kyi","tag_id":"cirqb7442000tadls61c9qbhs","_id":"cirqb74480010adlsbws5bkyi"},{"post_id":"cirqb743g0006adlsq9dm3kyi","tag_id":"cirqb7441000oadlsp0vpz7tr","_id":"cirqb744a0012adlshim2z9un"},{"post_id":"cirqb743g0006adlsq9dm3kyi","tag_id":"cirqb7440000madlsex4ij4gw","_id":"cirqb744b0013adls5lftlmnf"},{"post_id":"cirqb743j0008adlsc47darc7","tag_id":"cirqb7446000yadls3318l9wb","_id":"cirqb744g0016adlsxn9kbufk"},{"post_id":"cirqb743j0008adlsc47darc7","tag_id":"cirqb7441000qadls7t9frtah","_id":"cirqb744h0017adlskz7jhsga"},{"post_id":"cirqb743j0008adlsc47darc7","tag_id":"cirqb744d0014adlsginmwhj2","_id":"cirqb744i0019adlsyck82wdf"},{"post_id":"cirqb743r000aadlscllbluby","tag_id":"cirqb7441000qadls7t9frtah","_id":"cirqb744i001aadls1s3qo88b"},{"post_id":"cirqb743r000aadlscllbluby","tag_id":"cirqb744h0018adls2djwacrm","_id":"cirqb744j001badlsa0ub8561"}],"Tag":[{"name":"sql server 2005","_id":"cirqb74390004adlsf0oaop0a"},{"name":"备份还原","_id":"cirqb743r0009adlsii1mzkf1"},{"name":"raneto","_id":"cirqb743v000dadlsf69tkw5d"},{"name":"wiki","_id":"cirqb743z000jadlsv3d9simf"},{"name":"markdown","_id":"cirqb7440000madlsex4ij4gw"},{"name":"nodejs","_id":"cirqb7441000oadlsp0vpz7tr"},{"name":"hexo","_id":"cirqb7441000qadls7t9frtah"},{"name":"github","_id":"cirqb7442000tadls61c9qbhs"},{"name":"vps","_id":"cirqb7446000yadls3318l9wb"},{"name":"git","_id":"cirqb744d0014adlsginmwhj2"},{"name":"Travis CI","_id":"cirqb744h0018adls2djwacrm"}]}}